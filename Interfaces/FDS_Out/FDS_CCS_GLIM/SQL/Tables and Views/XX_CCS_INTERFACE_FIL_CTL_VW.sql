USE [IMAPSStg]
GO

/****** Object:  View [dbo].[XX_CCS_INTERFACE_FIL_CTL_VW]    Script Date: 12/7/2022 2:43:46 PM ******/
DROP VIEW [dbo].[XX_CCS_INTERFACE_FIL_CTL_VW]
GO

/****** Object:  View [dbo].[XX_CCS_INTERFACE_FIL_CTL_VW]    Script Date: 12/7/2022 2:43:46 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO



/* 
Used by CFF for CCS Interface  - THIS IS A FIL CONTROL RECORD

SELECT * FROM IMAPSSTG.DBO.XX_CCS_INTERFACE_FIL_CTL_VW

PADDED SPACES:

-- PREFERRED FILLER CHARACTER IS VALUE 32 (ASCII SPACE DECIMAL CHARACTER).  SQL SERVER HAS QUIRKS WHEN PADDING WITH SPACES. GENERALLY UNSUPPORTED 

-- IF FILE FAILS WHEN USING 32, FALLBACK VALUE IS 158. MUST ALSO MODIFY CCS_0216_DET.PROPERTIES
     FILE TO INCLUDE PARAMETER: file.swapchars=158,32 
	 PUT IT IN THE #FILE SECTION

-- FOR FILLER CHARACTER, NO CHANGE NECESSARY TO THE VIEW.  JUST CHANGE PROC PARAMETERS TABLE:

-- TO SEE WHICH FILLER CHARACTER IS CURRENTLY USED: SELECT PARAMETER_VALUE AS INT FROM IMAPSSTG.DBO.XX_PROCESSING_PARAMETERS WHERE INTERFACE_NAME_CD = 'UTIL' AND PARAMETER_NAME = 'PAD_CHAR'

-- TO UPDATE FILLER CHARACTER TO BE USED:  UPDATE IMAPSSTG.DBO.XX_PROCESSING_PARAMETERS SET PARAMETER_VALUE = '158' WHERE PARAMETER_NAME = 'PAD_CHAR'



Len of field to be sent to packed decimal should be equal to first digit.  
For example, '00000000000' (LEN=11) would be sent to a DEC(11,2) packed decimal field
The number 12345.67 should be converted to 00001234567 for a total length of 11
To convert a column, use the general form:

packed decimal specification: DEC(X,Y)  (LENGTH, PRECISION)

RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(X,0),((COLUMN_NAME) * 100)) as varchar),X)

DECIMAL(X,0) TO REMOVE DECIMAL POINT, WHERE X = LENGTH OF THE PACKED DECIMAL SPECIFICATION
MULTIPLY THE AMOUNT (COLUMN_NAME) BY 100
ZEROES ARE APPENDED TO LEFT OF NUMBER
RIGHT FUNCTION LENGTH IS ALSO EQUAL TO X
*/

CREATE VIEW [dbo].[XX_CCS_INTERFACE_FIL_CTL_VW]
AS

SELECT
/**** requested by CCS *****/
--REPLICATE(CHAR(IMAPSSTG.DBO.XX_GET_PAD_UF()),23) AS FILLER_01,
--MAX(INV_DATE) AS INVC_DATE,
2 as ARDIV,
0 as YR_OF_SALE,
99 as FAKE_DIV,
REPLICATE(CHAR(IMAPSSTG.DBO.XX_GET_PAD_UF()),3) AS FILLER_00,
REPLICATE(CHAR(IMAPSSTG.DBO.XX_GET_PAD_UF()),7) AS WHERE_CUSTOMER_WOULD_GO,
REPLICATE(CHAR(IMAPSSTG.DBO.XX_GET_PAD_UF()),1) AS FILLER_01,
'0' AS ZERO,
REPLICATE(CHAR(IMAPSSTG.DBO.XX_GET_PAD_UF()),7) AS WHERE_INVOICE_NUM_WOULD_GO,
(select top 1 inv_date from IMAPSSTG.DBO.XX_CCS_INTERFACE_DTL_VW order by invc_id) AS INVC_DATE,
/**** requested by CCS *****/
-- note: bigint required because int maxes out at $21.4 million
CASE CHARINDEX('-',
RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(13,0),((SUM(CASE CHARINDEX('-',INV_AMT) WHEN 0 THEN CAST(INV_AMT AS BIGINT) ELSE CAST(REPLACE(INV_AMT,'-','0') AS BIGINT) * -1 END) ))) as varchar),13)
)WHEN 0 THEN 
RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(13,0),((SUM(CASE CHARINDEX('-',INV_AMT) WHEN 0 THEN CAST(INV_AMT AS BIGINT) ELSE CAST(REPLACE(INV_AMT,'-','0') AS BIGINT) * -1 END) ))) as varchar),13)
ELSE '-' + REPLACE(
RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(13,0),((SUM(CASE CHARINDEX('-',INV_AMT) WHEN 0 THEN CAST(INV_AMT AS BIGINT) ELSE CAST(REPLACE(INV_AMT,'-','0') AS BIGINT) * -1 END) ))) as varchar),13)
,'-','') END as TOT_AMT,

/**** requested by CCS *****/

--sum(cast(inv_amt as bigint)) as tot_amt_DIAGNOSIS,

--REPLICATE(CHAR(IMAPSSTG.DBO.XX_GET_PAD_UF()),13) AS FILLER_02,
REPLICATE(CHAR(IMAPSSTG.DBO.XX_GET_PAD_UF()),9) as FILLER_02A,
'A' AS SOME_CODE,
REPLICATE(CHAR(IMAPSSTG.DBO.XX_GET_PAD_UF()),3) AS FILLER_02B,
/**** requested by CCS *****/
-- REPLICATE(CHAR(IMAPSSTG.DBO.XX_GET_PAD_UF()),1) AS I_BILL_LOC, -- THAT'S THE 1
-- REPLICATE(CHAR(IMAPSSTG.DBO.XX_GET_PAD_UF()),1) AS FILLER_03,
-- REPLICATE(CHAR(IMAPSSTG.DBO.XX_GET_PAD_UF()),3) AS I_TRANS_SEQ_NO,-- THAT'S THE DIGIT
-- how many files sent this month, a sequence number
'3' AS I_BILL_LOC, 
REPLICATE(CHAR(IMAPSSTG.DBO.XX_GET_PAD_UF()),1) AS FILLER_03,
right ('000' + cast(
(select 1 + COUNT(distinct status_record_num) from imapsstg.dbo.XX_IMAPS_INVOICE_SENT where convert(varchar(6), getdate(), 112) = convert(varchar(6), time_stamp, 112)) 
as varchar(3)),3) as I_TRANS_SEQ_NO,
/**** requested by CCS *****/
RIGHT('00000000000000000'+ CAST(COUNT(*) + 2 AS VARCHAR(6)),6) AS Q_REC_COUNT,
REPLICATE(CHAR(IMAPSSTG.DBO.XX_GET_PAD_UF()),83) AS FILLER_04,
'7' AS C_INITIAL_ACT,
REPLICATE(CHAR(IMAPSSTG.DBO.XX_GET_PAD_UF()),35) AS FILLER_05,
REPLICATE(CHAR(IMAPSSTG.DBO.XX_GET_PAD_UF()),1) AS C_RECORD_MARK,
REPLICATE(CHAR(IMAPSSTG.DBO.XX_GET_PAD_UF()),720) AS FILLER_06


FROM IMAPSSTG.DBO.XX_CCS_INTERFACE_DTL_VW
-- where INV_AMT <> 0


GO


