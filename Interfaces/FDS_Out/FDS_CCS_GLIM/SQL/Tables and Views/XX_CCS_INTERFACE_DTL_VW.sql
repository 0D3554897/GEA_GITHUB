USE [IMAPSStg]
GO

/****** Object:  View [dbo].[XX_CCS_INTERFACE_DTL_VW]    Script Date: 6/3/2020 2:39:26 PM ******/
DROP VIEW [dbo].[XX_CCS_INTERFACE_DTL_VW]
GO

/****** Object:  View [dbo].[XX_CCS_INTERFACE_DTL_VW]    Script Date: 6/3/2020 2:39:26 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO



/* 
Used by CFF for CCS Interface

usage: select * from imapsstg.dbo.xx_ccs_interface_dtl_vw

This is a UNION query... most changes must be made in both queries.

Len of field to be sent to packed decimal should be equal to first digit.  
For example, '00000000000' (LEN=11) would be sent to a DEC(11,2) packed decimal field
The number 12345.67 should be converted to 00001234567 for a total length of 11
To convert a column, use the general form:

packed decimal specification: DEC(X,Y)  (LENGTH, PRECISION)

RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(X,0),((COLUMN_NAME) * 100)) as varchar),X)

DECIMAL(X,0) TO REMOVE DECIMAL POINT, WHERE X = LENGTH OF THE PACKED DECIMAL SPECIFICATION
MULTIPLY THE AMOUNT (COLUMN_NAME) BY 100
ZEROES ARE APPENDED TO LEFT OF NUMBER
RIGHT FUNCTION LENGTH IS ALSO EQUAL TO X

DOING THIS PUTS A DASH (NEGATIVE CHAR) IN THE MIDDLE OF THE NUMBER... SO WE HAVE TO ADJUST:
WE USE A CASE STATEMENT, AND PUT THE GENERAL FORM INTO IT THREE TIMES

CASE CHARINDEX('-',
  RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(X,0),((COLUMN_NAME) * 100)) as varchar),X)
)WHEN 0 THEN 
  RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(X,0),((COLUMN_NAME) * 100)) as varchar),X)
ELSE '-' + REPLACE(
  RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(X,0),((COLUMN_NAME) * 100)) as varchar),X)
,'-','') END as TOT_AMT

*/

--ARDIV, YR_OF_SALE, COLL_DIV, PROMPT_PAY, LPF_PAY_CD, QTR_BILL_IND, CUST_NUM, DIRECT_DR, SUM_IND, INVC_ID, INV_DATE, INV_AMT, FILLER_01, AR_ACTV_IND, FDS_CUST_TYPE, AR_SOURCE, FILLER_02, CUST_REF1, CUST_REF2, FILLER_03, TIMEPAY, FILLER_04, COLLECTION_BO, FILLER_05, LATE_PAY_ID, FILLER_06A, C_INITIAL_ACT, FILLER_06B, TOT_TIME_PAY, FILLER_07, SHIP_DATE, IGF_LPF_AMT, FILLER_08, BUS_UNIT, PROD_ID, REV, SALESTAX, BU2, PI2, RV2, ST2, BU3, PI3, RV3, ST3, BU4, PI4, RV4, ST4, BU5, PI5, RV5, ST5, BU6, PI6, RV6, ST6, BU7, PI7, RV7, ST7, BU8, PI8, RV8, ST8, BU9, PI9, RV9, ST9, BU10, PI10, RV10, ST10, BU11, PI11, RV11, ST11, BU12, PI12, RV12, ST12, BU13, PI13, RV13, ST13, BU14, PI14, RV14, ST14, BU15, PI15, RV15, ST15, BU16, PI16, RV16, ST16, BU17, PI17, RV17, ST17, BU18, PI18, RV18, ST18, BU19, PI19, RV19, ST19, BU20, PI20, RV20, ST20, BU21, PI21, RV21, ST21, BU22, PI22, RV22, ST22, BU23, PI23, RV23, ST23, BU24, PI24, RV24, ST24, BU25, PI25, RV25, ST25, BU26, PI26, RV26, ST26, BU27, PI27, RV27, ST27, BU28, PI28, RV28, ST28, BU29, PI29, RV29, ST29, BU30, PI30, RV30, ST30, BU31, PI31, RV31, ST31, BU32, PI32, RV32, ST32, BU33, PI33, RV33, ST33, BU34, PI34, RV34, ST34, BU35, PI35, RV35, ST35, BU36, PI36, RV36, ST36, BU37, PI37, RV37, ST37, BU38, PI38, RV38, ST38, BU39, PI39, RV39, ST39, BU40, PI40, RV40, ST40

CREATE VIEW [dbo].[XX_CCS_INTERFACE_DTL_VW]
AS

select 

ARDIV, YR_OF_SALE, COLL_DIV, PROMPT_PAY, LPF_PAY_CD, QTR_BILL_IND, CUST_NUM, DIRECT_DR, SUM_IND, INVC_ID, INV_DATE, 
-- sum(cast( INV_AMT as bigint)) as INV_AMT, 
-- MUST USE BIGINT, BECAUSE INT MAXES OUT AT $21.4 MILLION

CASE CHARINDEX('-',
  RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(13,0),(sum(cast( INV_AMT as bigint)))) as varchar),13)
)WHEN 0 THEN 
  RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(13,0),(sum(cast( INV_AMT as bigint)))) as varchar),13)
ELSE '-' + REPLACE(
  RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(13,0),(sum(cast( INV_AMT as bigint)))) as varchar),13)
,'-','') END AS INV_AMT,


FILLER_01, AR_ACTV_IND, FDS_CUST_TYPE, AR_SOURCE, FILLER_02, CUST_REF1, CUST_REF2, FILLER_03, TIMEPAY, FILLER_04, COLLECTION_BO, FILLER_05, LATE_PAY_ID, FILLER_06A, DUE_DATE, C_INITIAL_ACT, FILLER_06B, TOT_TIME_PAY, FILLER_07, SHIP_DATE, IGF_LPF_AMT, FILLER_08, BUS_UNIT, PROD_ID, 
-- sum(cast(REV as bigint)) as REV, 

CASE CHARINDEX('-',
  RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(11,0),(sum(cast( REV as bigint)))) as varchar),11)
)WHEN 0 THEN 
  RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(11,0),(sum(cast( REV as bigint)))) as varchar),11)
ELSE '-' + REPLACE(
  RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(11,0),(sum(cast( REV as bigint)))) as varchar),11)
,'-','') END AS REV,


--sum(cast(SALESTAX as bigint)) as SALESTAX, 

CASE CHARINDEX('-',
  RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(11,0),(sum(cast( SALESTAX as bigint)))) as varchar),11)
)WHEN 0 THEN 
  RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(11,0),(sum(cast( SALESTAX as bigint)))) as varchar),11)
ELSE '-' + REPLACE(
  RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(11,0),(sum(cast( SALESTAX as bigint)))) as varchar),11)
,'-','') END AS SALESTAX,

BU2, PI2, RV2, ST2, BU3, PI3, RV3, ST3, BU4, PI4, RV4, ST4, BU5, PI5, RV5, ST5, BU6, PI6, RV6, ST6, BU7, PI7, RV7, ST7, BU8, PI8, RV8, ST8, BU9, PI9, RV9, ST9, BU10, PI10, RV10, ST10, BU11, PI11, RV11, ST11, BU12, PI12, RV12, ST12, BU13, PI13, RV13, ST13, BU14, PI14, RV14, ST14, BU15, PI15, RV15, ST15, BU16, PI16, RV16, ST16, BU17, PI17, RV17, ST17, BU18, PI18, RV18, ST18, BU19, PI19, RV19, ST19, BU20, PI20, RV20, ST20, BU21, PI21, RV21, ST21, BU22, PI22, RV22, ST22, BU23, PI23, RV23, ST23, BU24, PI24, RV24, ST24, BU25, PI25, RV25, ST25, BU26, PI26, RV26, ST26, BU27, PI27, RV27, ST27, BU28, PI28, RV28, ST28, BU29, PI29, RV29, ST29, BU30, PI30, RV30, ST30, BU31, PI31, RV31, ST31, BU32, PI32, RV32, ST32, BU33, PI33, RV33, ST33, BU34, PI34, RV34, ST34, BU35, PI35, RV35, ST35, BU36, PI36, RV36, ST36, BU37, PI37, RV37, ST37, BU38, PI38, RV38, ST38, BU39, PI39, RV39, ST39, BU40, PI40, RV40, ST40

 from (

 select 
2 as ARDIV,
0 as YR_OF_SALE,
12 as COLL_DIV,
' ' as PROMPT_PAY,
' ' as LPF_PAY_CD,
' ' as QTR_BILL_IND,
cust_addr_dc as CUST_NUM,
' ' as DIRECT_DR,
' ' as SUM_IND,
right(a.INVC_ID,7) AS INVC_ID,
right(convert(varchar, a.invc_dt, 112),6) as INV_DATE,

CASE CHARINDEX('-',
  RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(13,0),(SUM(b.BILLED_AMT) * 100)) as varchar),13)
)WHEN 0 THEN 
  RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(13,0),(SUM(b.BILLED_AMT) * 100)) as varchar),13)
ELSE '-' + REPLACE(
  RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(13,0),(SUM(b.BILLED_AMT) * 100)) as varchar),13)
,'-','') END as INV_AMT,

-- RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(13,0),((AVG(b.BILLED_AMT - b.sales_tax_amt)) * 100)) as varchar),13) as INV_AMT,
'   ' as FILLER_01,
'B' as AR_ACTV_IND,

CASE TI_CMR_CUST_TYPE WHEN 'B' THEN 'F' WHEN 'U' THEN 'F' WHEN 'V' THEN 'F' WHEN 'E' THEN 'P' WHEN 'C' THEN 'S' WHEN 'D' THEN 'S' WHEN 'F' THEN 'S' WHEN 'G' THEN 'S' WHEN 'A' THEN 'C' WHEN 'O' THEN 'C' WHEN 'P' THEN 'C' WHEN 'Y' THEN 'C' WHEN 'Z' THEN 'C' WHEN 'H' THEN 'A' WHEN 'I' THEN 'A' WHEN 'K' THEN 'I' WHEN 'L' THEN 'I' WHEN 'M' THEN 'I' WHEN 'N' THEN 'I' WHEN 'R' THEN 'I' WHEN 'S' THEN 'I' WHEN 'T' THEN 'I' WHEN 'W' THEN 'I' WHEN 'X' THEN 'I' ELSE 'C' END as FDS_CUST_TYPE,
'0142' as AR_SOURCE,
SPACE(16) as FILLER_02,
/******* it is not the T_CUST_REF  ***********
left(coalesce(T_CUST_REF_1,' ') + '                  ',17) as CUST_REF1,
SPACE(17) as CUST_REF2,
*****/
-- INCLUDE 20 CHAR CUST_PO_ID ACROSS TWO CCS FIELDS
left(coalesce(CUST_PO_ID,' ') + SPACE(17),17) AS CUST_REF1,
right(coalesce(CUST_PO_ID,' ') + SPACE(3),3) + SPACE(14) AS CUST_REF2,

SPACE(4) as FILLER_03,
'  ' as TIMEPAY,
SPACE(16) as FILLER_04,
-- BO means business office
I_COLL_OFF as COLLECTION_BO,
space(7) as FILLER_05,
' ' as LATE_PAY_ID,
-- CHANGED FROM SPACE(22)
SPACE(10) as FILLER_06A,
IMAPSSTG.DBO.XX_DATE_TO_JULIAN_UF(A.DUE_DT) AS DUE_DATE,
'B' as C_INITIAL_ACT,
SPACE(6) as FILLER_06B,
-- END CHANGED FROM SPACE(22)
SPACE(6) as TOT_TIME_PAY,
'  ' as FILLER_07,
SPACE(6) as SHIP_DATE,
'00000000000' as IGF_LPF_AMT,
SPACE(10) as FILLER_08,
--Note:  BUSINESS UNIT, PRODUCT ID, REVENUE AMT and TAX AMOUNT are a 40 member array in CCS only the first group should be populated
--all other entries should contain blank in the character defined fields and positive 0 numeric in the decimal fields


16 as BUS_UNIT,
'GA70' as PROD_ID,


CASE CHARINDEX('-',
  RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(13,0),((SUM(b.BILLED_AMT - b.sales_tax_amt)) * 100)) as varchar),11)
)WHEN 0 THEN 
  RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(13,0),((SUM(b.BILLED_AMT - b.sales_tax_amt)) * 100)) as varchar),11)
ELSE '-' + REPLACE(
  RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(13,0),((SUM(b.BILLED_AMT - b.sales_tax_amt)) * 100)) as varchar),11)
,'-','') END as REV,

--RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(11,0),(SUM(b.BILLED_AMT) * 100)) as varchar),11) AS REV, 


CASE CHARINDEX('-',
  RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(11,0),(SUM(b.SALES_TAX_AMT) * 100)) as varchar),11)
)WHEN 0 THEN 
  RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(11,0),(SUM(b.SALES_TAX_AMT) * 100)) as varchar),11)
ELSE '-' + REPLACE(
  RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(11,0),(SUM(b.SALES_TAX_AMT) * 100)) as varchar),11)
,'-','') END as SALESTAX


-- RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(11,0),(SUM(a.FDS_SALES_TAX_AMT) * 100)) as varchar),11) AS SALESTAX
--all other entries should contain blank in the character defined fields and positive 0 numeric in the decimal fields
,SPACE(2) as BU2
,SPACE(4) as PI2
,'00000000000' AS RV2
,'00000000000' AS ST2
,SPACE(2) as BU3
,SPACE(4) as PI3
,'00000000000' AS RV3
,'00000000000' AS ST3
,SPACE(2) as BU4
,SPACE(4) as PI4
,'00000000000' AS RV4
,'00000000000' AS ST4
,SPACE(2) as BU5
,SPACE(4) as PI5
,'00000000000' AS RV5
,'00000000000' AS ST5
,SPACE(2) as BU6
,SPACE(4) as PI6
,'00000000000' AS RV6
,'00000000000' AS ST6
,SPACE(2) as BU7
,SPACE(4) as PI7
,'00000000000' AS RV7
,'00000000000' AS ST7
,SPACE(2) as BU8
,SPACE(4) as PI8
,'00000000000' AS RV8
,'00000000000' AS ST8
,SPACE(2) as BU9
,SPACE(4) as PI9
,'00000000000' AS RV9
,'00000000000' AS ST9
,SPACE(2) as BU10
,SPACE(4) as PI10
,'00000000000' AS RV10
,'00000000000' AS ST10
,SPACE(2) as BU11
,SPACE(4) as PI11
,'00000000000' AS RV11
,'00000000000' AS ST11
,SPACE(2) as BU12
,SPACE(4) as PI12
,'00000000000' AS RV12
,'00000000000' AS ST12
,SPACE(2) as BU13
,SPACE(4) as PI13
,'00000000000' AS RV13
,'00000000000' AS ST13
,SPACE(2) as BU14
,SPACE(4) as PI14
,'00000000000' AS RV14
,'00000000000' AS ST14
,SPACE(2) as BU15
,SPACE(4) as PI15
,'00000000000' AS RV15
,'00000000000' AS ST15
,SPACE(2) as BU16
,SPACE(4) as PI16
,'00000000000' AS RV16
,'00000000000' AS ST16
,SPACE(2) as BU17
,SPACE(4) as PI17
,'00000000000' AS RV17
,'00000000000' AS ST17
,SPACE(2) as BU18
,SPACE(4) as PI18
,'00000000000' AS RV18
,'00000000000' AS ST18
,SPACE(2) as BU19
,SPACE(4) as PI19
,'00000000000' AS RV19
,'00000000000' AS ST19
,SPACE(2) as BU20
,SPACE(4) as PI20
,'00000000000' AS RV20
,'00000000000' AS ST20
,SPACE(2) as BU21
,SPACE(4) as PI21
,'00000000000' AS RV21
,'00000000000' AS ST21
,SPACE(2) as BU22
,SPACE(4) as PI22
,'00000000000' AS RV22
,'00000000000' AS ST22
,SPACE(2) as BU23
,SPACE(4) as PI23
,'00000000000' AS RV23
,'00000000000' AS ST23
,SPACE(2) as BU24
,SPACE(4) as PI24
,'00000000000' AS RV24
,'00000000000' AS ST24
,SPACE(2) as BU25
,SPACE(4) as PI25
,'00000000000' AS RV25
,'00000000000' AS ST25
,SPACE(2) as BU26
,SPACE(4) as PI26
,'00000000000' AS RV26
,'00000000000' AS ST26
,SPACE(2) as BU27
,SPACE(4) as PI27
,'00000000000' AS RV27
,'00000000000' AS ST27
,SPACE(2) as BU28
,SPACE(4) as PI28
,'00000000000' AS RV28
,'00000000000' AS ST28
,SPACE(2) as BU29
,SPACE(4) as PI29
,'00000000000' AS RV29
,'00000000000' AS ST29
,SPACE(2) as BU30
,SPACE(4) as PI30
,'00000000000' AS RV30
,'00000000000' AS ST30
,SPACE(2) as BU31
,SPACE(4) as PI31
,'00000000000' AS RV31
,'00000000000' AS ST31
,SPACE(2) as BU32
,SPACE(4) as PI32
,'00000000000' AS RV32
,'00000000000' AS ST32
,SPACE(2) as BU33
,SPACE(4) as PI33
,'00000000000' AS RV33
,'00000000000' AS ST33
,SPACE(2) as BU34
,SPACE(4) as PI34
,'00000000000' AS RV34
,'00000000000' AS ST34
,SPACE(2) as BU35
,SPACE(4) as PI35
,'00000000000' AS RV35
,'00000000000' AS ST35
,SPACE(2) as BU36
,SPACE(4) as PI36
,'00000000000' AS RV36
,'00000000000' AS ST36
,SPACE(2) as BU37
,SPACE(4) as PI37
,'00000000000' AS RV37
,'00000000000' AS ST37
,SPACE(2) as BU38
,SPACE(4) as PI38
,'00000000000' AS RV38
,'00000000000' AS ST38
,SPACE(2) as BU39
,SPACE(4) as PI39
,'00000000000' AS RV39
,'00000000000' AS ST39
,SPACE(2) as BU40
,SPACE(4) as PI40
,'00000000000' AS RV40
,'00000000000' AS ST40
FROM imapsstg.dbo.XX_IMAPS_INV_OUT_SUM a 
join imapsstg.dbo.XX_IMAPS_INV_OUT_DTL b on a.INVC_ID = b.invc_id 
WHERE 1=1
and (a.INVC_AMT + a.fds_inv_amt) <> 0 
-- and a.fds_inv_amt <> 0  -- omits zero dollar invoices
and coalesce(b.acct_id,'0') not in ('48-79-08','49-79-09')
AND A.STATUS_FL <> 'E' 
and b.BILLED_AMT <> 0
GROUP BY CUST_PO_ID, CUST_ADDR_DC,A.INVC_ID,A.INVC_DT,TI_CMR_CUST_TYPE,T_CUST_REF_1,I_COLL_OFF,A.DUE_DT
HAVING SUM(B.BILLED_AMT) <> 0
union
--this query includes CSP only invoices with no div16 billing
select 2,0,12,' ',' ',' ',cust_addr_dc,' ',' ',right(a.INVC_ID,7) AS INVC_ID,
right(convert(varchar, a.invc_dt, 112),6) as inv_date,
--b.BILLED_AMT - b.sales_tax_amt BECOMES ZERO
RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(13,0),(0) * 100) as varchar),13) as INV_AMT,
'   ','B', 
CASE TI_CMR_CUST_TYPE WHEN 'B' THEN 'F' WHEN 'U' THEN 'F' WHEN 'V' THEN 'F' WHEN 'E' THEN 'P' WHEN 'C' THEN 'S' WHEN 'D' THEN 'S' WHEN 'F' THEN 'S' WHEN 'G' THEN 'S' WHEN 'A' THEN 'C' WHEN 'O' THEN 'C' WHEN 'P' THEN 'C' WHEN 'Y' THEN 'C' WHEN 'Z' THEN 'C' WHEN 'H' THEN 'A' WHEN 'I' THEN 'A' WHEN 'K' THEN 'I' WHEN 'L' THEN 'I' WHEN 'M' THEN 'I' WHEN 'N' THEN 'I' WHEN 'R' THEN 'I' WHEN 'S' THEN 'I' WHEN 'T' THEN 'I' WHEN 'W' THEN 'I' WHEN 'X' THEN 'I' ELSE 'C' END, '0142',SPACE(16),
/******* it is not the T_CUST_REF  ***********
left(coalesce(T_CUST_REF_1,' ') + '                  ',17) as CUST_REF1,
SPACE(17) as CUST_REF2,
*****/
-- INCLUDE 20 CHAR CUST_PO_ID ACROSS TWO CCS FIELDS
left(coalesce(CUST_PO_ID,' ') + SPACE(17),17) AS CUST_REF1,
right(coalesce(CUST_PO_ID,' ') + SPACE(3),3) + SPACE(14) AS CUST_REF2,
SPACE(4) as FILLER_03,
'  ' as TIMEPAY,
SPACE(16) as FILLER_04,
-- BO means business office
I_COLL_OFF as COLLECTION_BO,
space(7) as FILLER_05,
' ' as LATE_PAY_ID,
--CHANGED FROM SPACE(22)
SPACE(10) as FILLER_06A,
IMAPSSTG.DBO.XX_DATE_TO_JULIAN_UF(A.DUE_DT) AS DUE_DATE,
'B' AS C_INITIAL_ACT,
SPACE(6),
-- END CHANGED FROM SPACE(22)
SPACE(6),'  ',SPACE(6),
'00000000000' as IGL_LPF_AMT,
SPACE(10),
--Note:  BUSINESS UNIT, PRODUCT ID, REVENUE AMT and TAX AMOUNT are a 40 member array in CCS only the first group should be populated
--all other entries should contain blank in the character defined fields and positive 0 numeric in the decimal fields
16,'GA70',
--b.BILLED_AMT BECOMES ZERO
RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(11,0),(0) * 100) as varchar),11) AS REV,
--a.FDS_SALES_TAX_AMT BECOMES ZERO 
RIGHT('00000000000000000'+ cast(CONVERT(DECIMAL(11,0),((0) * 100)) as varchar),11) AS SALESTAX 
--all other entries should contain blank in the character defined fields and positive 0 numeric in the decimal fields
,SPACE(2) as BU2
,SPACE(4) as PI2
,'00000000000' AS RV2
,'00000000000' AS ST2
,SPACE(2) as BU3
,SPACE(4) as PI3
,'00000000000' AS RV3
,'00000000000' AS ST3
,SPACE(2) as BU4
,SPACE(4) as PI4
,'00000000000' AS RV4
,'00000000000' AS ST4
,SPACE(2) as BU5
,SPACE(4) as PI5
,'00000000000' AS RV5
,'00000000000' AS ST5
,SPACE(2) as BU6
,SPACE(4) as PI6
,'00000000000' AS RV6
,'00000000000' AS ST6
,SPACE(2) as BU7
,SPACE(4) as PI7
,'00000000000' AS RV7
,'00000000000' AS ST7
,SPACE(2) as BU8
,SPACE(4) as PI8
,'00000000000' AS RV8
,'00000000000' AS ST8
,SPACE(2) as BU9
,SPACE(4) as PI9
,'00000000000' AS RV9
,'00000000000' AS ST9
,SPACE(2) as BU10
,SPACE(4) as PI10
,'00000000000' AS RV10
,'00000000000' AS ST10
,SPACE(2) as BU11
,SPACE(4) as PI11
,'00000000000' AS RV11
,'00000000000' AS ST11
,SPACE(2) as BU12
,SPACE(4) as PI12
,'00000000000' AS RV12
,'00000000000' AS ST12
,SPACE(2) as BU13
,SPACE(4) as PI13
,'00000000000' AS RV13
,'00000000000' AS ST13
,SPACE(2) as BU14
,SPACE(4) as PI14
,'00000000000' AS RV14
,'00000000000' AS ST14
,SPACE(2) as BU15
,SPACE(4) as PI15
,'00000000000' AS RV15
,'00000000000' AS ST15
,SPACE(2) as BU16
,SPACE(4) as PI16
,'00000000000' AS RV16
,'00000000000' AS ST16
,SPACE(2) as BU17
,SPACE(4) as PI17
,'00000000000' AS RV17
,'00000000000' AS ST17
,SPACE(2) as BU18
,SPACE(4) as PI18
,'00000000000' AS RV18
,'00000000000' AS ST18
,SPACE(2) as BU19
,SPACE(4) as PI19
,'00000000000' AS RV19
,'00000000000' AS ST19
,SPACE(2) as BU20
,SPACE(4) as PI20
,'00000000000' AS RV20
,'00000000000' AS ST20
,SPACE(2) as BU21
,SPACE(4) as PI21
,'00000000000' AS RV21
,'00000000000' AS ST21
,SPACE(2) as BU22
,SPACE(4) as PI22
,'00000000000' AS RV22
,'00000000000' AS ST22
,SPACE(2) as BU23
,SPACE(4) as PI23
,'00000000000' AS RV23
,'00000000000' AS ST23
,SPACE(2) as BU24
,SPACE(4) as PI24
,'00000000000' AS RV24
,'00000000000' AS ST24
,SPACE(2) as BU25
,SPACE(4) as PI25
,'00000000000' AS RV25
,'00000000000' AS ST25
,SPACE(2) as BU26
,SPACE(4) as PI26
,'00000000000' AS RV26
,'00000000000' AS ST26
,SPACE(2) as BU27
,SPACE(4) as PI27
,'00000000000' AS RV27
,'00000000000' AS ST27
,SPACE(2) as BU28
,SPACE(4) as PI28
,'00000000000' AS RV28
,'00000000000' AS ST28
,SPACE(2) as BU29
,SPACE(4) as PI29
,'00000000000' AS RV29
,'00000000000' AS ST29
,SPACE(2) as BU30
,SPACE(4) as PI30
,'00000000000' AS RV30
,'00000000000' AS ST30
,SPACE(2) as BU31
,SPACE(4) as PI31
,'00000000000' AS RV31
,'00000000000' AS ST31
,SPACE(2) as BU32
,SPACE(4) as PI32
,'00000000000' AS RV32
,'00000000000' AS ST32
,SPACE(2) as BU33
,SPACE(4) as PI33
,'00000000000' AS RV33
,'00000000000' AS ST33
,SPACE(2) as BU34
,SPACE(4) as PI34
,'00000000000' AS RV34
,'00000000000' AS ST34
,SPACE(2) as BU35
,SPACE(4) as PI35
,'00000000000' AS RV35
,'00000000000' AS ST35
,SPACE(2) as BU36
,SPACE(4) as PI36
,'00000000000' AS RV36
,'00000000000' AS ST36
,SPACE(2) as BU37
,SPACE(4) as PI37
,'00000000000' AS RV37
,'00000000000' AS ST37
,SPACE(2) as BU38
,SPACE(4) as PI38
,'00000000000' AS RV38
,'00000000000' AS ST38
,SPACE(2) as BU39
,SPACE(4) as PI39
,'00000000000' AS RV39
,'00000000000' AS ST39
,SPACE(2) as BU40
,SPACE(4) as PI40
,'00000000000' AS RV40
,'00000000000' AS ST40

FROM imapsstg.dbo.XX_IMAPS_INV_OUT_SUM a 
join imapsstg.dbo.XX_IMAPS_INV_OUT_DTL b on a.INVC_ID = b.invc_id 
WHERE 1=1
and (a.INVC_AMT + a.fds_inv_amt) <> 0 -- omits zero dollar invoices and keeps csp's
-- and a.fds_inv_amt <> 0  -- omits zero dollar invoices
and b.BILLED_AMT <> 0
and coalesce(b.acct_id,'0') in ('48-79-08','49-79-09')
AND A.STATUS_FL <> 'E'
and b.INVC_ID not in (select d.INVC_ID from imapsstg.dbo.XX_SABRIX_INV_OUT_DTL d where d.ACCT_ID not IN ('48-79-08','49-79-09'))
) a
GROUP BY ARDIV, YR_OF_SALE, COLL_DIV, PROMPT_PAY, LPF_PAY_CD, QTR_BILL_IND, CUST_NUM, DIRECT_DR, SUM_IND, INVC_ID, INV_DATE, 
--INV_AMT,
FILLER_01, AR_ACTV_IND, FDS_CUST_TYPE, AR_SOURCE, FILLER_02, CUST_REF1, CUST_REF2, FILLER_03, TIMEPAY, FILLER_04, COLLECTION_BO, FILLER_05, LATE_PAY_ID, FILLER_06A, DUE_DATE, C_INITIAL_ACT, FILLER_06B, TOT_TIME_PAY, FILLER_07, SHIP_DATE, IGF_LPF_AMT, FILLER_08, BUS_UNIT, PROD_ID, 
--REV, SALESTAX, 
BU2, PI2, RV2, ST2, BU3, PI3, RV3, ST3, BU4, PI4, RV4, ST4, BU5, PI5, RV5, ST5, BU6, PI6, RV6, ST6, BU7, PI7, RV7, ST7, BU8, PI8, RV8, ST8, BU9, PI9, RV9, ST9, BU10, PI10, RV10, ST10, BU11, PI11, RV11, ST11, BU12, PI12, RV12, ST12, BU13, PI13, RV13, ST13, BU14, PI14, RV14, ST14, BU15, PI15, RV15, ST15, BU16, PI16, RV16, ST16, BU17, PI17, RV17, ST17, BU18, PI18, RV18, ST18, BU19, PI19, RV19, ST19, BU20, PI20, RV20, ST20, BU21, PI21, RV21, ST21, BU22, PI22, RV22, ST22, BU23, PI23, RV23, ST23, BU24, PI24, RV24, ST24, BU25, PI25, RV25, ST25, BU26, PI26, RV26, ST26, BU27, PI27, RV27, ST27, BU28, PI28, RV28, ST28, BU29, PI29, RV29, ST29, BU30, PI30, RV30, ST30, BU31, PI31, RV31, ST31, BU32, PI32, RV32, ST32, BU33, PI33, RV33, ST33, BU34, PI34, RV34, ST34, BU35, PI35, RV35, ST35, BU36, PI36, RV36, ST36, BU37, PI37, RV37, ST37, BU38, PI38, RV38, ST38, BU39, PI39, RV39, ST39, BU40, PI40, RV40, ST40

GO


