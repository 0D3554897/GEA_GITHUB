USE [IMAPSStg]
GO

/****** Object:  StoredProcedure [dbo].[XX_FIWLR_MISCODE_UPDATE_FEEDBACK_SP]    Script Date: 11/15/2016 11:38:30 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[XX_FIWLR_MISCODE_UPDATE_FEEDBACK_SP]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[XX_FIWLR_MISCODE_UPDATE_FEEDBACK_SP]
GO

USE [IMAPSStg]
GO

/****** Object:  StoredProcedure [dbo].[XX_FIWLR_MISCODE_UPDATE_FEEDBACK_SP]    Script Date: 11/15/2016 11:38:30 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO





CREATE PROCEDURE [dbo].[XX_FIWLR_MISCODE_UPDATE_FEEDBACK_SP] (
@out_STATUS_DESCRIPTION sysname = NULL
)

AS

BEGIN

/************************************************************************************************  
Name:       XX_FIWLR_MISCODE_UPDATE_FEEDBACK_SP  
Author:     KM  

Notes:

CP600000322 05/15/2008 (BP&S Change Request No. CR1543)
            Costpoint multi-company fix (8 instances).

on change:

1.  UPDATE MISCODE TABLE FOR NULL VALUES AND FEEDBACK
/* 03/05/2009   KM				Implement DR1958                                        */


2010-09-14 1M changes

CR6295 - Div1P - KM - 2013-04-29
For the purposes of FIWLR account mappings, evaluate 1P as if it is the same as 16

CR8762 - Div2G - TP - 2016-11-03
For the purposes of FIWLR account mappings, evaluate 2G as if it is the same as 16

************************************************************************************************/
 
DECLARE	@SP_NAME         	 sysname,
	@DIV_16_COMPANY_ID 	 varchar(10),
        @IMAPS_error_number      integer,
        @SQLServer_error_code    integer,
        @error_msg_placeholder1  sysname,
        @error_msg_placeholder2  sysname,
	@INTERFACE_NAME		 sysname,
	@ret_code		 int,
	@count			 int

-- CP600000322_Begin
SELECT @DIV_16_COMPANY_ID = PARAMETER_VALUE
  FROM dbo.XX_PROCESSING_PARAMETERS
 WHERE PARAMETER_NAME = 'COMPANY_ID'
   AND INTERFACE_NAME_CD = 'FIWLR'
-- CP600000322_End

	SET @IMAPS_ERROR_NUMBER = 204 -- ATTEMPT TO %1 %2 FAILED.
	SET @ERROR_MSG_PLACEHOLDER1 = 'UPDATE NULL'
	SET @ERROR_MSG_PLACEHOLDER2 = 'INVNO'

	update xx_fiwlr_usdet_miscodes
	set inv_no = 'null'
	where inv_no is null or len(ltrim(rtrim(inv_no)))=0
	
	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR

	
	SET @IMAPS_ERROR_NUMBER = 204 -- ATTEMPT TO %1 %2 FAILED.
	SET @ERROR_MSG_PLACEHOLDER1 = 'UPDATE NULL'
	SET @ERROR_MSG_PLACEHOLDER2 = 'FIWLR_INV_DATE'
	
	update xx_fiwlr_usdet_miscodes
	set FIWLR_INV_DATE = 'null'
	where FIWLR_INV_DATE is null or len(ltrim(rtrim(FIWLR_INV_DATE)))=0
	
	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR

	SET @IMAPS_ERROR_NUMBER = 204 -- ATTEMPT TO %1 %2 FAILED.
	SET @ERROR_MSG_PLACEHOLDER1 = 'UPDATE NULL'
	SET @ERROR_MSG_PLACEHOLDER2 = 'PO_NO'

	update xx_fiwlr_usdet_miscodes
	set PO_NO = 'null'
	where PO_NO is null or len(ltrim(rtrim(PO_NO)))=0

	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR

	
	SET @IMAPS_ERROR_NUMBER = 204 -- ATTEMPT TO %1 %2 FAILED.
	SET @ERROR_MSG_PLACEHOLDER1 = 'UPDATE NULL'
	SET @ERROR_MSG_PLACEHOLDER2 = 'vendor_id'

	update xx_fiwlr_usdet_miscodes
	set vendor_id = 'null'
	where vendor_id is null or len(ltrim(rtrim(vendor_id)))=0
	
	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR

	
	SET @IMAPS_ERROR_NUMBER = 204 -- ATTEMPT TO %1 %2 FAILED.
	SET @ERROR_MSG_PLACEHOLDER1 = 'UPDATE NULL'
	SET @ERROR_MSG_PLACEHOLDER2 = 'ORG_ABBR_CD'

	UPDATE	XX_FIWLR_USDET_MISCODES
	SET	ORG_ABBR_CD = (SELECT ORG_ABBRV_CD FROM IMAPS.DELTEK.ORG WHERE ORG_ID = FIWLR.ORG_ID AND COMPANY_ID = @DIV_16_COMPANY_ID) -- CP600000322
	FROM  	XX_FIWLR_USDET_MISCODES FIWLR	
	WHERE 	ORG_ID IS NOT NULL AND RTRIM(ORG_ID) <> ''

	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR


	SET @IMAPS_ERROR_NUMBER = 204 -- ATTEMPT TO %1 %2 FAILED.
	SET @ERROR_MSG_PLACEHOLDER1 = 'UPDATE FEEDBACK'
	SET @ERROR_MSG_PLACEHOLDER2 = ''
	
	/*FEEDBACK UPDATE */	
	UPDATE XX_FIWLR_USDET_MISCODES
	SET REFERENCE1='M',
	REFERENCE2=''


--KM 1M changes
--check on proj and org where not null or blank
--CR6295 begin
	UPDATE 	XX_FIWLR_USDET_MISCODES
	SET PROJ_ABBR_CD = '?'+DIVISION+'?',
		PROJ_ID = NULL,
		REFERENCE2 = CAST(REFERENCE2 + 'div_proj,' AS VARCHAR(125))
	FROM	XX_FIWLR_USDET_MISCODES FIWLR
	WHERE	LEN(ISNULL(PROJ_ABBR_CD,'')) > 0
	-- CR8762
	AND		CASE WHEN DIVISION IN ('2G','1P') THEN '16' ELSE DIVISION END  <> isnull((select CASE WHEN left(org_id,2) IN ('2G','1P') THEN '16' ELSE left(org_id,2) END  from imaps.deltek.proj where proj_abbrv_cd=FIWLR.PROJ_ABBR_CD),'')
	--AND		DIVISION <> dbo.XX_GET_DIV_FOR_PROJ_ABBRV_CD_UF(proj_abbr_cd) - this is too slow


	UPDATE 	XX_FIWLR_USDET_MISCODES
	SET ORG_ABBR_CD = '?'+DIVISION+'?',
		REFERENCE2 = CAST(REFERENCE2 + 'div_org,' AS VARCHAR(125))
	FROM	XX_FIWLR_USDET_MISCODES FIWLR
	WHERE	LEN(ISNULL(ORG_ABBR_CD,'')) > 0
   -- CR8762
	AND		CASE WHEN DIVISION IN ('2G','1P') THEN '16' ELSE DIVISION END  <> isnull((select CASE WHEN left(org_id,2) IN ('2G','1P') THEN '16' ELSE left(org_id,2) END from imaps.deltek.org where org_abbrv_cd=FIWLR.ORG_ABBR_CD), '')
	--AND DIVISION <> dbo.XX_GET_DIV_FOR_ORG_ABBRV_CD_UF(org_abbr_cd) - this is too slow
--CR6295 end
--end 1M changes

	UPDATE 	XX_FIWLR_USDET_MISCODES
	SET	REFERENCE2 = CAST(REFERENCE2 + 'acct,' AS VARCHAR(125))
	FROM	XX_FIWLR_USDET_MISCODES FIWLR
	WHERE	0 =
	(	SELECT COUNT(1)
		FROM IMAPS.DELTEK.ACCT
		WHERE ACCT_ID = FIWLR.ACCT_ID
	)
	
	
	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR
	

	UPDATE 	XX_FIWLR_USDET_MISCODES
	SET	REFERENCE2 = CAST(REFERENCE2 + 'proj_org,' AS VARCHAR(125))
	FROM	XX_FIWLR_USDET_MISCODES FIWLR
	WHERE	ORG_ABBR_CD IS NULL
	AND		PROJ_ABBR_CD IS NULL
	
	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR


	UPDATE 	XX_FIWLR_USDET_MISCODES
	SET	REFERENCE2 = CAST(REFERENCE2 + 'org,' AS VARCHAR(125))
	FROM	XX_FIWLR_USDET_MISCODES FIWLR
	WHERE	ORG_ABBR_CD IS NOT NULL
	AND	0 =
	(	SELECT COUNT(1)
		FROM 	IMAPS.DELTEK.ORG
		WHERE	ORG_ID = FIWLR.ORG_ID
		AND 	COMPANY_ID = @DIV_16_COMPANY_ID -- CP600000322
	)
	
	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR	

	UPDATE 	XX_FIWLR_USDET_MISCODES
	SET	REFERENCE2 = CAST(REFERENCE2 + 'proj,' AS VARCHAR(125))
	FROM	XX_FIWLR_USDET_MISCODES FIWLR
	WHERE	PROJ_ABBR_CD IS NOT NULL
	AND	0 =
	(	SELECT COUNT(1)
		FROM 	IMAPS.DELTEK.PROJ
		WHERE	PROJ_ABBRV_CD = FIWLR.PROJ_ABBR_CD
		AND		PROJ_ABBRV_CD <> ''
		AND 	COMPANY_ID = @DIV_16_COMPANY_ID -- CP600000322
	)

	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR
	
	UPDATE 	XX_FIWLR_USDET_MISCODES
	SET	REFERENCE2 = CAST(REFERENCE2 + 'acct_pag,' AS VARCHAR(125))
	FROM	XX_FIWLR_USDET_MISCODES FIWLR
	WHERE	ACCT_ID IS NOT NULL
	AND	PAG_CD IS NOT NULL
	AND	0 =
	(	SELECT COUNT(1)
		FROM 	IMAPS.DELTEK.ACCT_GRP_SETUP
		WHERE	ACCT_ID = FIWLR.ACCT_ID
		AND	ACCT_GRP_CD = FIWLR.PAG_CD
		AND 	COMPANY_ID = @DIV_16_COMPANY_ID -- CP600000322
	)
	
	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR	

	UPDATE 	XX_FIWLR_USDET_MISCODES
	SET	REFERENCE2 = CAST(REFERENCE2 + 'acct_org,' AS VARCHAR(125))
	FROM	XX_FIWLR_USDET_MISCODES FIWLR
	WHERE	ACCT_ID IS NOT NULL
	AND	ORG_ID IS NOT NULL
	AND	0 =
	(	SELECT COUNT(1)
		FROM 	IMAPS.DELTEK.ORG_ACCT
		WHERE	ACCT_ID = FIWLR.ACCT_ID
		AND	ORG_ID = FIWLR.ORG_ID
	)

	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR

	UPDATE 	XX_FIWLR_USDET_MISCODES
	SET	REFERENCE2 = CAST(REFERENCE2 + 'acct_owning_org,'AS VARCHAR(125))
	FROM	XX_FIWLR_USDET_MISCODES FIWLR
	WHERE	ACCT_ID IS NOT NULL
	AND	PROJ_ABBR_CD IS NOT NULL
	AND	PAG_CD IS NOT NULL
	AND	ORG_ID IS NULL
	AND	0 =
	(	SELECT COUNT(1)
		FROM 	IMAPS.DELTEK.ORG_ACCT ORG_ACCT
		INNER JOIN
			IMAPS.DELTEK.PROJ PROJ
		ON (	PROJ.ORG_ID = ORG_ACCT.ORG_ID AND PROJ.COMPANY_ID = @DIV_16_COMPANY_ID) -- CP600000322
		WHERE	PROJ.PROJ_ABBRV_CD = FIWLR.PROJ_ABBR_CD
		AND	ORG_ACCT.ACCT_ID = FIWLR.ACCT_ID
	)
	
	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR

	UPDATE 	XX_FIWLR_USDET_MISCODES
	SET	REFERENCE2 = CAST(REFERENCE2 + 'proj_chg_fl,' AS VARCHAR(125))
	FROM	XX_FIWLR_USDET_MISCODES FIWLR
	WHERE	PROJ_ABBR_CD IS NOT NULL
	AND	1 =
	(	SELECT COUNT(1) 
		FROM 	IMAPS.DELTEK.PROJ
		WHERE	PROJ_ABBRV_CD = FIWLR.PROJ_ABBR_CD
		AND	ALLOW_CHARGES_FL = 'N'
		AND 	COMPANY_ID = @DIV_16_COMPANY_ID -- CP600000322
	)

	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR


	UPDATE 	XX_FIWLR_USDET_MISCODES
	SET	REFERENCE2 = CAST(REFERENCE2 + 'proj_inactive,' AS VARCHAR(125))
	FROM	XX_FIWLR_USDET_MISCODES FIWLR
	WHERE	PROJ_ABBR_CD IS NOT NULL
	AND	1 =
	(	SELECT COUNT(1)
		FROM 	IMAPS.DELTEK.PROJ
		WHERE	PROJ_ABBRV_CD = FIWLR.PROJ_ABBR_CD
		AND	ACTIVE_FL = 'N'
		AND 	COMPANY_ID = @DIV_16_COMPANY_ID -- CP600000322
	)
	
	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR

	UPDATE 	XX_FIWLR_USDET_MISCODES
	SET	REFERENCE2 = CAST(REFERENCE2 + 'org_inactive,' AS VARCHAR(125))
	FROM	XX_FIWLR_USDET_MISCODES FIWLR
	WHERE	ORG_ABBR_CD IS NOT NULL
	AND	1 =
	(	SELECT COUNT(1)
		FROM 	IMAPS.DELTEK.ORG
		WHERE	ORG_ABBRV_CD = FIWLR.ORG_ABBR_CD
		AND	ACTIVE_FL = 'N'
		AND 	COMPANY_ID = @DIV_16_COMPANY_ID -- CP600000322
	)
	
	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR



--along with 1M changes, this one caused by GBS org restructuring bugs
	SET @IMAPS_ERROR_NUMBER = 204 -- ATTEMPT TO %1 %2 FAILED.
	SET @ERROR_MSG_PLACEHOLDER1 = 'UPDATE FIWLR'
	SET @ERROR_MSG_PLACEHOLDER2 = 'WITH MISCODE FEEDBACK - OWNING ORG ACTIVE_FL'	

	UPDATE 	XX_FIWLR_USDET_MISCODES
	SET	REFERENCE2 = CAST(REFERENCE2 + 'owning_org_inactive,' AS VARCHAR(125))
	FROM	XX_FIWLR_USDET_MISCODES FIWLR
	WHERE	PROJ_ABBR_CD IS NOT NULL
	AND RTRIM(LTRIM(PROJ_ABBR_CD))<>''
	AND	1 =
	(	SELECT COUNT(1)
		FROM 	IMAPS.DELTEK.ORG
		WHERE	ORG_ID = (select org_id from imaps.deltek.proj where proj_abbrv_cd=FIWLR.PROJ_ABBR_CD)
		AND	ACTIVE_FL = 'N'
	)

	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR



	UPDATE 	XX_FIWLR_USDET_MISCODES
	SET	REFERENCE2 = CAST(REFERENCE2 + 'acct_inactive,' AS VARCHAR(125))
	FROM	XX_FIWLR_USDET_MISCODES FIWLR
	WHERE	ACCT_ID IS NOT NULL
	AND	1 =
	(	SELECT COUNT(1)
		FROM 	IMAPS.DELTEK.ACCT
		WHERE	ACCT_ID = FIWLR.ACCT_ID
		AND	ACTIVE_FL = 'N'
	)
	
	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR

	UPDATE 	XX_FIWLR_USDET_MISCODES
	SET	REFERENCE2 = CAST(REFERENCE2 + 'proj_required_wwer,' AS VARCHAR(125))
	WHERE	
	SOURCE IN ('005', 'N16') 
	and (PROJ_ABBR_CD IS NULL
	OR	LEN(RTRIM(PROJ_ABBR_CD)) = 0)			

	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR

	UPDATE 	XX_FIWLR_USDET_MISCODES
	SET	REFERENCE2 = CAST(REFERENCE2 + 'proj_required_acct,' AS VARCHAR(125))
	FROM	XX_FIWLR_USDET_MISCODES FIWLR
	WHERE	PROJ_ABBR_CD IS NULL
	AND	1 = (SELECT COUNT(1) FROM IMAPS.DELTEK.ACCT WHERE ACCT_ID = FIWLR.ACCT_ID AND PROJ_REQD_FL = 'Y')
	
	-- CR9364 begin
	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR
	
	SET @IMAPS_ERROR_NUMBER = 204 -- ATTEMPT TO %1 %2 FAILED.
	SET @ERROR_MSG_PLACEHOLDER1 = 'UPDATE FIWLR'
	SET @ERROR_MSG_PLACEHOLDER2 = 'WITH MISCODE FEEDBACK - Vendor'	
			
	UPDATE 	XX_FIWLR_USDET_MISCODES
	SET	REFERENCE2 = CAST(REFERENCE2 + 'vendor,' AS VARCHAR(125))
	FROM	XX_FIWLR_USDET_MISCODES FIWLR
	WHERE	 SOURCE = '005'
	AND RTRIM(ISNULL(VENDOR_ID,'null'))= 'null'
	-- CR9364 end
		
	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR

	UPDATE 	XX_FIWLR_USDET_MISCODES
	SET 	REFERENCE2 = 'valid'
	WHERE	LEN(REFERENCE2) = 0




	/* UPDATE FOR MAX LINE ITEMS PER COSTPOINT DOCUMENT */

	--1M change, include division in grouping

	--GROUPING AP WWER
	UPDATE XX_FIWLR_USDET_MISCODES
	SET REFERENCE3 = 
	(SELECT MAX(IDENT_REC_NO) FROM XX_FIWLR_USDET_MISCODES  
	WHERE		
	--1M changes
	DIVISION = FIWLR.DIVISION
	AND		

	STATUS_REC_NO = FIWLR.STATUS_REC_NO  
	AND	    SOURCE_GROUP = FIWLR.SOURCE_GROUP  
	AND		VOUCHER_NO = FIWLR.VOUCHER_NO  
	AND		SOURCE = FIWLR.SOURCE  
	AND		MAJOR = FIWLR.MAJOR  
	AND		ISNULL(INV_NO, '') = ISNULL(FIWLR.INV_NO, '')
	--AND		EXTRACT_DATE = FIWLR.EXTRACT_DATE  
	AND		ISNULL(FIWLR_INV_DATE, '') = ISNULL(FIWLR.FIWLR_INV_DATE, '')  
	AND 		ISNULL(PO_NO, '') = ISNULL(FIWLR.PO_NO, '')
	AND 		ISNULL(VENDOR_ID, '')= ISNULL(FIWLR.VENDOR_ID, '')
	AND		ISNULL(EMPLOYEE_NO, '') = ISNULL(FIWLR.EMPLOYEE_NO, ''))	
	FROM 	XX_FIWLR_USDET_MISCODES FIWLR
	WHERE 	SOURCE_GROUP = 'AP'
	AND	SOURCE IN ('005', 'N16')
	
	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR

	--GROUPING AP NONWWER
	UPDATE XX_FIWLR_USDET_MISCODES
	SET REFERENCE3 = 
	(SELECT MAX(IDENT_REC_NO) FROM XX_FIWLR_USDET_MISCODES  
	WHERE		
	--1M changes
	DIVISION = FIWLR.DIVISION
	AND		
	STATUS_REC_NO = FIWLR.STATUS_REC_NO  
	AND	    	SOURCE_GROUP = FIWLR.SOURCE_GROUP  
	AND		VOUCHER_NO = FIWLR.VOUCHER_NO  
	AND		SOURCE = FIWLR.SOURCE  
	AND		MAJOR = FIWLR.MAJOR  
	AND		ISNULL(INV_NO, '') = ISNULL(FIWLR.INV_NO, '')
	AND		EXTRACT_DATE = FIWLR.EXTRACT_DATE  
	AND		ISNULL(FIWLR_INV_DATE, '') = ISNULL(FIWLR.FIWLR_INV_DATE, '')  
	AND 		ISNULL(PO_NO, '') = ISNULL(FIWLR.PO_NO, '')
	AND 		ISNULL(VENDOR_ID, '')= ISNULL(FIWLR.VENDOR_ID, ''))
	--AND		ISNULL(EMPLOYEE_NO, '') = ISNULL(FIWLR.EMPLOYEE_NO, ''))	
	FROM 	XX_FIWLR_USDET_MISCODES FIWLR
	WHERE 	SOURCE_GROUP = 'AP'
	AND	SOURCE NOT IN ('005', 'N16')
	
	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR

	--GROUPING je
	UPDATE XX_FIWLR_USDET_MISCODES
	SET REFERENCE3 = 
	(SELECT MAX(IDENT_REC_NO) FROM XX_FIWLR_USDET_MISCODES  
	WHERE		
	--1M changes
	DIVISION = FIWLR.DIVISION
	AND		

	STATUS_REC_NO = FIWLR.STATUS_REC_NO  
	AND	    	SOURCE_GROUP = FIWLR.SOURCE_GROUP  
	AND		VOUCHER_NO = FIWLR.VOUCHER_NO  
	AND		SOURCE = FIWLR.SOURCE  
	AND		MAJOR = FIWLR.MAJOR)
	--AND		INV_NO = FIWLR.INV_NO  
	--AND		EXTRACT_DATE = FIWLR.EXTRACT_DATE  
	--AND		FIWLR_INV_DATE = FIWLR.FIWLR_INV_DATE  
	--AND 		PO_NO = FIWLR.PO_NO  
	--AND 		VENDOR_ID = FIWLR.VENDOR_ID
	--AND		EMPLOYEE_NO = FIWLR.EMPLOYEE_NO)	
	FROM 	XX_FIWLR_USDET_MISCODES FIWLR
	WHERE 	SOURCE_GROUP = 'JE'
	
	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR
	
	DECLARE @STATUS_REC_NO int,
		@REFERENCE3 varchar(125),
		@LINE_COUNT int
	
	START_MAX_LINES_CURSOR:
	
	DECLARE MAX_LINES_CURSOR CURSOR FAST_FORWARD FOR
		select status_rec_no, reference3, count(1)
		from xx_fiwlr_usdet_miscodes
		group by status_rec_no, reference3
		having count(1) > 1497
	
	OPEN MAX_LINES_CURSOR
	FETCH MAX_LINES_CURSOR
	INTO @STATUS_REC_NO, @REFERENCE3, @LINE_COUNT
	
	WHILE(@@FETCH_STATUS = 0)
	BEGIN
		DECLARE @CUTOFF_IDENT_REC_NO int
		
		SELECT top 1497 @CUTOFF_IDENT_REC_NO = IDENT_REC_NO
		FROM 	XX_FIWLR_USDET_MISCODES
		WHERE 	STATUS_REC_NO = @STATUS_REC_NO
		AND	REFERENCE3 = @REFERENCE3
		ORDER BY IDENT_REC_NO
	
		UPDATE 	XX_FIWLR_USDET_MISCODES
		SET	REFERENCE3 = REFERENCE3 + 'M'
		WHERE 	STATUS_REC_NO = @STATUS_REC_NO
		AnD	REFERENCE3 = @REFERENCE3
		AND	IDENT_REC_NO > @CUTOFF_IDENT_REC_NO
			
		FETCH MAX_LINES_CURSOR
		INTO @STATUS_REC_NO, @REFERENCE3, @LINE_COUNT
	END
	
	CLOSE MAX_LINES_CURSOR
	DEALLOCATE MAX_LINES_CURSOR
	
	select status_rec_no, reference3, count(1)
		from xx_fiwlr_usdet_miscodes
		group by status_rec_no, reference3
		having count(1) > 1497
	
	IF @@ROWCOUNT <> 0 GOTO START_MAX_LINES_CURSOR

	
	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR


	

	SET @IMAPS_ERROR_NUMBER = 204 -- ATTEMPT TO %1 %2 FAILED.
	SET @ERROR_MSG_PLACEHOLDER1 = 'UPDATE TO NULL'
	SET @ERROR_MSG_PLACEHOLDER2 = 'INVNO'

	update xx_fiwlr_usdet_miscodes
	set inv_no = null
	where inv_no = 'null' 

	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR

	
	SET @IMAPS_ERROR_NUMBER = 204 -- ATTEMPT TO %1 %2 FAILED.
	SET @ERROR_MSG_PLACEHOLDER1 = 'UPDATE TO NULL'
	SET @ERROR_MSG_PLACEHOLDER2 = 'FIWLR_INV_DATE'
	
	update xx_fiwlr_usdet_miscodes
	set FIWLR_INV_DATE = null
	where FIWLR_INV_DATE = 'null'

	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR

	SET @IMAPS_ERROR_NUMBER = 204 -- ATTEMPT TO %1 %2 FAILED.
	SET @ERROR_MSG_PLACEHOLDER1 = 'UPDATE TO NULL'
	SET @ERROR_MSG_PLACEHOLDER2 = 'PO_NO'

	update xx_fiwlr_usdet_miscodes
	set PO_NO = null
	where PO_NO = 'null'

	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR

	
	SET @IMAPS_ERROR_NUMBER = 204 -- ATTEMPT TO %1 %2 FAILED.
	SET @ERROR_MSG_PLACEHOLDER1 = 'UPDATE TO NULL'
	SET @ERROR_MSG_PLACEHOLDER2 = 'vendor_id'

	update xx_fiwlr_usdet_miscodes
	set vendor_id = null
	where vendor_id = 'null'

	SELECT @SQLSERVER_ERROR_CODE = @@ERROR	
	IF @SQLSERVER_ERROR_CODE <> 0 GOTO ERROR

RETURN 0

ERROR:

PRINT @out_STATUS_DESCRIPTION

EXEC dbo.XX_ERROR_MSG_DETAIL
   @in_error_code           = @IMAPS_error_number,
   @in_display_requested    = 1,
   @in_SQLServer_error_code = @SQLServer_error_code,
   @in_placeholder_value1   = @error_msg_placeholder1,
   @in_placeholder_value2   = @error_msg_placeholder2,
   @in_calling_object_name  = @SP_NAME,
   @out_msg_text            = @out_STATUS_DESCRIPTION OUTPUT

PRINT @out_STATUS_DESCRIPTION

RETURN 1

END


GO

