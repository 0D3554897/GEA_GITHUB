USE [IMAPSStg]
GO
/****** Object:  StoredProcedure [dbo].[XX_CERIS_ARCHIVE_DATA_SP]    Script Date: 08/20/2007 16:39:48 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/****** Object:  Stored Procedure dbo.XX_CERIS_ARCHIVE_DATA_SP    Script Date: 8/20/2007 4:51:11 PM ******/
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[XX_CERIS_ARCHIVE_DATA_SP]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[XX_CERIS_ARCHIVE_DATA_SP]
GO



CREATE PROCEDURE [dbo].[XX_CERIS_ARCHIVE_DATA_SP]
(
@in_STATUS_RECORD_NUM      integer,
@out_SQLServer_error_code  integer      = NULL OUTPUT,
@out_STATUS_DESCRIPTION    varchar(255) = NULL OUTPUT
)
AS

/*******************************************************************************************************
Name:       XX_CERIS_ARCHIVE_DATA_SP
Author:     HVT
Created:    10/19/2005
Purpose:    Archive source input CERIS data and validation error data generated by the CERIS interface.
            For the current CERIS interface job, record total number of records in 3 categories: input,
            error (if any), and processed (successful).
            Also archive the retroactive timesheet data, if any.
            Called by XX_CERIS_RUN_INTERFACE_SP.
Parameters: 
Result Set: None
Notes:

CP600000284 04/15/2008 (BP&S Change Request No. CR1543)
            Apply the Costpoint column COMPANY_ID to distinguish Division 16's data from those of
            Division 22's. There is one instance.

CP600001216 05/13/2011 (FSST Service Request No. CR3735)
            Eliminate use of shared ID (e.g., in bcp call)

CR4885 - IMAPS CERIS Interface Changes for Actuals - KM - 2012-05-25
CR4885 - IMAPS CERIS Interface Changes for Actuals - KM - 2012-10-17 - need to force split week miscodes to be grouped together
********************************************************************************************************/

BEGIN

DECLARE @SP_NAME                   sysname,
        @DIV_16_COMPANY_ID         varchar(10),
        @total_input_records       integer,
        @total_error_records       integer,
	@total_timesheet_records   integer,
	@total_timesheet_errors    integer,
        @total_processed_records   integer,
        @SQLServer_error_code      integer,
        @IMAPS_error_code          integer,
        @error_msg_placeholder1    sysname,
        @error_msg_placeholder2    sysname,
        @row_count                 integer,
        @ret_code                  integer,
	@words			   varchar(254),
	@CMD			   varchar(500),
	@ERR_FILE_FLAG		   char(1)

SET @ERR_FILE_FLAG = 'Y'

-- set local constants
SET @SP_NAME = 'XX_CERIS_ARCHIVE_DATA_SP'

-- initialize local variables
SET @total_input_records = 0
SET @total_error_records = 0
SET @total_processed_records = 0
SET @IMAPS_error_code = 204

PRINT 'Process Stage CERIS8 - Archive source, error and retroactive timesheet data ...'
--Load TS PREP ERRORS TABLE
DECLARE @IMAPS_DB_NAME sysname,
	@IMAPS_SCHEMA_OWNER sysname,
	@IN_USER_PASSWORD sysname,
	@RETRO_TS_ERR_FORMAT_FILE sysname,
	@RETRO_TS_ERR_FILE sysname,
	@RETRO_TS_PREP_FILE sysname,
	@ARCH_DIR sysname

-- CP600000284_Begin

 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 92 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
SELECT @DIV_16_COMPANY_ID = PARAMETER_VALUE
FROM   dbo.XX_PROCESSING_PARAMETERS
WHERE  PARAMETER_NAME = 'COMPANY_ID'
AND    INTERFACE_NAME_CD = 'CERIS'

-- CP600000284_End

 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 102 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
SELECT 	@IMAPS_DB_NAME = PARAMETER_VALUE
FROM 	dbo.XX_PROCESSING_PARAMETERS
WHERE	PARAMETER_NAME = 'IMAPS_DB_NAME'
AND	INTERFACE_NAME_CD = 'CERIS'

 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 110 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
SELECT 	@IMAPS_SCHEMA_OWNER = PARAMETER_VALUE
FROM 	dbo.XX_PROCESSING_PARAMETERS
WHERE	PARAMETER_NAME = 'IMAPS_SCHEMA_OWNER'
AND	INTERFACE_NAME_CD = 'CERIS'

-- CR3735_Begin
/*
SELECT 	@IN_USER_PASSWORD = PARAMETER_VALUE
FROM 	dbo.XX_PROCESSING_PARAMETERS
WHERE	PARAMETER_NAME = 'IN_USER_PASSWORD'
AND	INTERFACE_NAME_CD = 'CERIS'
*/
-- CR3735_End

 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 127 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
SELECT 	@RETRO_TS_ERR_FORMAT_FILE = PARAMETER_VALUE
FROM 	dbo.XX_PROCESSING_PARAMETERS
WHERE	PARAMETER_NAME = 'RETRO_TS_ERR_FORMAT_FILE'
AND	INTERFACE_NAME_CD = 'CERIS'

 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 135 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
SELECT 	@RETRO_TS_ERR_FILE = PARAMETER_VALUE
FROM 	dbo.XX_PROCESSING_PARAMETERS
WHERE	PARAMETER_NAME = 'RETRO_TS_ERR_FILE'
AND	INTERFACE_NAME_CD = 'CERIS'

SET @CMD = 'DIR ' + @RETRO_TS_ERR_FILE
EXEC @RET_CODE = MASTER.DBO.XP_CMDSHELL @CMD
IF @RET_CODE <> 0
BEGIN
	SET @ERR_FILE_FLAG = 'N'
	PRINT 'No timesheet error file found...'
END

 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 151 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
SELECT 	@RETRO_TS_PREP_FILE = PARAMETER_VALUE
FROM 	dbo.XX_PROCESSING_PARAMETERS
WHERE	PARAMETER_NAME = 'RETRO_TS_PREP_FILE'
AND	INTERFACE_NAME_CD = 'CERIS'

 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 159 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
SELECT 	@ARCH_DIR = PARAMETER_VALUE
FROM 	dbo.XX_PROCESSING_PARAMETERS
WHERE	PARAMETER_NAME = 'ARCH_DIR'
AND	INTERFACE_NAME_CD = 'CERIS'

IF @@ERROR <> 0
   BEGIN
      SET @error_msg_placeholder1 = 'obtain'
      SET @error_msg_placeholder2 = 'processing parameters'
      GOTO BL_ERROR_HANDLER
   END

--if ERR file generated (TS_PREP file was not blank)
IF @ERR_FILE_FLAG = 'Y'
BEGIN
-- CR3735_Begin
	EXEC @ret_code = dbo.XX_EXEC_SHELL_CMD_INSERT_OSUSER
	   @in_IMAPS_db_name       = @IMAPS_DB_NAME,
	   @in_IMAPS_table_owner   = @IMAPS_SCHEMA_OWNER,
	   @in_dest_table          = 'XX_CERIS_RETRO_TS_PREP_ERRORS',
	   @in_format_file         = @RETRO_TS_ERR_FORMAT_FILE,
	   @in_input_file          = @RETRO_TS_ERR_FILE,
--         @in_usr_password        = @IN_USER_PASSWORD,
	   @out_STATUS_DESCRIPTION = @words OUTPUT
-- CR3735_End

	IF @ret_code <> 0
	   BEGIN
	      SET @error_msg_placeholder1 = 'BCP error file to'
	      SET @error_msg_placeholder2 = 'XX_CERIS_RETRO_TS_PREP_ERRORS'
	      GOTO BL_ERROR_HANDLER
	   END

	--begin change KM 4/13/06
	-- Get Rid of Non Distinct Records If Needed
	IF (
		(SELECT COUNT(1) FROM dbo.XX_CERIS_RETRO_TS_PREP_ERRORS)
		<>
		(SELECT COUNT(DISTINCT NOTES) FROM dbo.XX_CERIS_RETRO_TS_PREP_ERRORS)
	)
	BEGIN
		PRINT 'Costpoint Error file contains duplicate records...'
		
		--CREATE DISTINCT ERROR FILE
		DECLARE @DISTINCT_ERR_FILE sysname
		SET @DISTINCT_ERR_FILE = REPLACE(@RETRO_TS_ERR_FILE, '.ERR', '_DISTINCT.ERR')
		SET @CMD = 'BCP "SELECT DISTINCT * FROM IMAPSStg.dbo.XX_CERIS_RETRO_TS_PREP_ERRORS" queryout ' + @DISTINCT_ERR_FILE + ' -f' + @RETRO_TS_ERR_FORMAT_FILE + ' -T' --S' + @@servername + ' -Uimapsstg ' + '-P' + @IN_USER_PASSWORD
		EXEC @ret_code = master.dbo.xp_cmdshell @CMD

		IF @ret_code <> 0
		   BEGIN
		      SET @error_msg_placeholder1 = 'BCP DISTINCT error file FROM'
		      SET @error_msg_placeholder2 = 'XX_CERIS_RETRO_TS_PREP_ERRORS TO CURRENT DIR'
		      GOTO BL_ERROR_HANDLER
		   END

		--ARCHIVE DISTINCT ERROR FILE
		SET @CMD = 'MOVE ' + @DISTINCT_ERR_FILE + ' ' + @ARCH_DIR + CAST(@in_STATUS_RECORD_NUM as varchar(10)) + '_CERIS_TS_PREP_DISTINCT.ERR'
		EXEC @ret_code = master.dbo.xp_cmdshell @CMD
		IF @ret_code <> 0
		  BEGIN
		      SET @error_msg_placeholder1 = 'archive file'
		      SET @error_msg_placeholder2 = 'CERIS_TS_PREP_DISTINCT.ERR'
		      GOTO BL_ERROR_HANDLER
		  END
		
	END
	--end change KM 4/13/06

	--ARCHIVE REGULAR ERROR FILE
	SET @CMD = 'MOVE ' + @RETRO_TS_ERR_FILE + ' ' + @ARCH_DIR + CAST(@in_STATUS_RECORD_NUM as varchar(10)) + '_CERIS_TS_PREP.ERR'
	EXEC @ret_code = master.dbo.xp_cmdshell @CMD
	IF @ret_code <> 0
	  BEGIN
	      SET @error_msg_placeholder1 = 'archive file'
	      SET @error_msg_placeholder2 = 'CERIS_TS_PREP.ERR'
	      GOTO BL_ERROR_HANDLER
	  END
END


--archive TS file  (if it was created)

--for some reason, Costpoint 6 renames the .TXT file to .ZZZ
SET @CMD = 'MOVE ' + REPLACE(@RETRO_TS_PREP_FILE, '.TXT', '.ZZZ') + ' ' + @ARCH_DIR + CAST(@in_STATUS_RECORD_NUM as varchar(10)) + '_CERIS_TS_PREP.TXT'
EXEC @ret_code = master.dbo.xp_cmdshell @CMD
IF @ret_code <> 0
  BEGIN
	  SET @error_msg_placeholder1 = 'archive file'
	  SET @error_msg_placeholder2 = 'CERIS_TS_PREP.TXT'
	  GOTO BL_ERROR_HANDLER
  END



/*
 * XX_CERIS_HIST_ARCHIVAL's PK column CERIS_HIST_ARCH_REC_NUM is an IDENTITY column.
 */
insert into dbo.XX_CERIS_HIST_ARCHIVAL
   (STATUS_RECORD_NUM, EMPL_ID, LNAME, FNAME, NAME_INIT, HIRE_EFF_DT, IBM_START_DT, TERM_DT,
    MGR_SERIAL_NUM, MGR_LNAME, MGR_INIT, JOB_FAM, JOB_FAM_DT, SAL_BAND, LVL_DT_1, DIVISION, DIVISION_START_DT,
    DEPT, DEPT_START_DT, DEPT_SUF_DT, FLSA_STAT, EXEMPT_DT, POS_CODE, POS_DESC, POS_DT, REG_TEMP,
    STAT3, EMPL_STAT3_DT, STATUS, EMPL_STAT_DT, STD_HRS, WORK_SCHD_DT, CREATED_BY, CREATED_DT,

	SALSETID, WKLNEW, WKLCITY, WKLST, PAY_DIFFERENTIAL, PAY_DIFFERENTIAL_DT,
	LVL_SUFFIX,DIVISION_FROM,SALARY,SALARY_RTE_CD,SALARY_DT,WKL_DT
	)
   select @in_STATUS_RECORD_NUM, EMPL_ID, LNAME, FNAME, NAME_INITIALS, HIRE_EFF_DT, IBM_START_DT, TERM_DT,
          MGR_SERIAL_NUM, MGR_LNAME, MGR_INITIALS, JOB_FAM, JOB_FAM_DT, SAL_BAND, LVL_DT_1, DIVISION, DIVISION_START_DT, 
          DEPT, DEPT_START_DT, DEPT_SUF_DT, FLSA_STAT, EXEMPT_DT, POS_CODE, POS_DESC, POS_DT, REG_TEMP, 
          STAT3, EMPL_STAT3_DT, STATUS, EMPL_STAT_DT, STD_HRS, WORK_SCHD_DT, SUSER_SNAME(), GETDATE(),
	
		  SALSETID, WKLNEW, WKLCITY, WKLST, PAY_DIFFERENTIAL, PAY_DIFFERENTIAL_DT,
		  LVL_SUFFIX,DIVISION_FROM,SALARY,SALARY_RTE_CD,SALARY_DT,WKL_DT
     from dbo.XX_CERIS_HIST

 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 278 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
SELECT @SQLServer_error_code = @@ERROR

IF @SQLServer_error_code<>0
   BEGIN
      -- Attempt to insert records into table XX_CERIS_HIST_ARCHIVAL failed.
      SET @error_msg_placeholder1 = 'insert'
      SET @error_msg_placeholder2 = 'records into table XX_CERIS_HIST_ARCHIVAL'
      GOTO BL_ERROR_HANDLER
   END



--CR4885
--only delete previous values for employees who are still on the current CERIS file
--otherwise, there will be problems with previous vs current logic when they transfer back in
DELETE XX_CERIS_HIST_PREVIOUS
FROM XX_CERIS_HIST_PREVIOUS prev
WHERE 0 <> (select count(1) from XX_CERIS_HIST where empl_id=prev.empl_id)

 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 300 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
SELECT @SQLServer_error_code = @@ERROR

IF @SQLServer_error_code<>0
   BEGIN
      -- Attempt to delete records into table XX_CERIS_HIST_PREVIOUS failed.
      SET @error_msg_placeholder1 = 'delete'
      SET @error_msg_placeholder2 = 'records in table XX_CERIS_HIST_PREVIOUS'
      GOTO BL_ERROR_HANDLER
   END


 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 314 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
INSERT INTO XX_CERIS_HIST_PREVIOUS
SELECT * FROM XX_CERIS_HIST

 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 320 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
SELECT @SQLServer_error_code = @@ERROR

IF @SQLServer_error_code<>0
   BEGIN
      -- Attempt to insert records into table XX_CERIS_HIST_PREVIOUS failed.
      SET @error_msg_placeholder1 = 'insert'
      SET @error_msg_placeholder2 = 'records into table XX_CERIS_HIST_PREVIOUS'
      GOTO BL_ERROR_HANDLER
   END
--CR4885




-- eliminate validation errors that are due to legacy CERIS records
-- (ie - employees whose term_dt is not null and who never made it into CONVERSION)
DELETE 	FROM dbo.XX_CERIS_VALIDAT_ERRORS
WHERE	EMPL_ID IN 
(
SELECT EMPL_ID FROM dbo.XX_CERIS_HIST 
 WHERE 	TERM_DT IS NOT NULL 
--1M changes - delete employees from validation error table if they have been terminated
-- AND	EMPL_ID NOT IN (select EMPL_ID from IMAPS.Deltek.EMPL where COMPANY_ID = @DIV_16_COMPANY_ID) -- CP600000284
)

-- verify that table XX_CERIS_HIST_ERROR_ARCHIVAL does have records to archive
select @row_count = COUNT(1) from dbo.XX_CERIS_VALIDAT_ERRORS

IF @row_count > 0
   BEGIN
      INSERT INTO dbo.XX_CERIS_HIST_ERROR_ARCHIVAL
         (STATUS_RECORD_NUM, EMPL_ID, ERROR_DESC, TIME_STAMP)
         SELECT STATUS_RECORD_NUM, EMPL_ID, ERROR_DESC, TIME_STAMP
           FROM dbo.XX_CERIS_VALIDAT_ERRORS
          WHERE STATUS_RECORD_NUM = @in_STATUS_RECORD_NUM
          ORDER BY EMPL_ID

 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 360 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
      SELECT @SQLServer_error_code = @@ERROR

      IF @SQLServer_error_code <> 0
         BEGIN
            -- Attempt to insert records into table XX_CERIS_HIST_ERROR_ARCHIVAL failed.
            SET @error_msg_placeholder1 = 'insert'
            SET @error_msg_placeholder2 = 'records into table XX_CERIS_HIST_ERROR_ARCHIVAL'
            GOTO BL_ERROR_HANDLER
         END

 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 373 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
      SELECT @total_input_records = COUNT(1)
        FROM dbo.XX_CERIS_HIST
       
 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 379 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
      SELECT @total_error_records = COUNT(1)
        FROM dbo.XX_CERIS_VALIDAT_ERRORS
      
   END




--begin KM 2012-10-17
--Delete from IMAPS.DELTEK.TS_HDR where one part of split week got imported, but other part miscoded
print convert(char(20), getdate(),120)
print 'force both parts of split week miscode into miscode status - if needed'

 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 395 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
update xx_ceris_retro_ts_prep
set REF_STRUC_2_ID='GOOD'
from xx_ceris_retro_ts_prep ts
WHERE 0 <> (select count(1) 
			from imaps.deltek.ts_ln
			where empl_id=ts.empl_id
			and ts_dt=ts.ts_dt
			and s_ts_type_cd='C'
			and ts_hdr_seq_no=ts.ts_hdr_seq_no
			and notes=ts.notes)

IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER


 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 412 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
update xx_ceris_retro_ts_prep
set REF_STRUC_2_ID='BAD'
from xx_ceris_retro_ts_prep ts
WHERE 0 = (select count(1) 
			from imaps.deltek.ts_ln
			where empl_id=ts.empl_id
			and ts_dt=ts.ts_dt
			and s_ts_type_cd='C'
			and ts_hdr_seq_no=ts.ts_hdr_seq_no
			and notes=ts.notes)

IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER


 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 429 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
update xx_ceris_retro_ts_prep
set REF_STRUC_2_ID='BAD'
from xx_ceris_retro_ts_prep ts
WHERE REF_STRUC_2_ID='GOOD'
AND		0 <> (select count(1) 
			from xx_ceris_retro_ts_prep
			where empl_id=ts.empl_id
			and ts_dt=ts.ts_dt
			and REF_STRUC_2_ID='BAD'
			and dbo.xx_get_friday_for_ts_week_day_uf(correcting_ref_dt)=dbo.xx_get_friday_for_ts_week_day_uf(ts.correcting_ref_dt)
			)

IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER



delete hdr
from imaps.deltek.ts_hdr hdr
where
0 <>		(select count(1) 
			from xx_ceris_retro_ts_prep
			where empl_id=hdr.empl_id
			and ts_dt=hdr.ts_dt
			and 'C'=hdr.s_ts_type_cd
			and ts_hdr_seq_no=hdr.ts_hdr_seq_no
			and REF_STRUC_2_ID='BAD'
			)

IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER





 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 466 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
update xx_ceris_retro_ts_prep
set REF_STRUC_2_ID=NULL

IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER



print convert(char(20), getdate(),120)
print 'get control totals'
--end KM 2012-10-17



 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 482 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
SELECT @total_input_records = COUNT(1)
  FROM dbo.XX_CERIS_HIST

 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 488 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
SELECT @total_timesheet_records = COUNT(1)
  FROM dbo.XX_CERIS_RETRO_TS_PREP

 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 494 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
SELECT @total_timesheet_errors = COUNT(1)
  FROM dbo.XX_CERIS_RETRO_TS_PREP ts
 WHERE 0 = (select count(1) 
			from imaps.deltek.ts_ln
			where empl_id=ts.empl_id
			and ts_dt=ts.ts_dt
			and s_ts_type_cd='C'
			and ts_hdr_seq_no=ts.ts_hdr_seq_no
			and notes=ts.notes)

SET @total_processed_records = @total_input_records - @total_error_records

 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 509 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
update dbo.XX_IMAPS_INT_STATUS
   set RECORD_COUNT_INITIAL = @total_input_records,
       RECORD_COUNT_SUCCESS = @total_processed_records,
       RECORD_COUNT_ERROR = @total_error_records,
       AMOUNT_INPUT = @total_timesheet_records,
       AMOUNT_PROCESSED = (@total_timesheet_records - @total_timesheet_errors),
       AMOUNT_FAILED = @total_timesheet_errors,
       MODIFIED_BY = SUSER_SNAME(),
       MODIFIED_DATE = GETDATE()
 where STATUS_RECORD_NUM = @in_STATUS_RECORD_NUM

 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 523 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
SELECT @SQLServer_error_code = @@ERROR

IF @SQLServer_error_code <> 0
   BEGIN
      -- Attempt to update a XX_IMAPS_INT_STATUS record failed.
      SET @error_msg_placeholder1 = 'update'
      SET @error_msg_placeholder2 = 'a XX_IMAPS_INT_STATUS record'
      GOTO BL_ERROR_HANDLER
   END


--begin archive records that errored out
INSERT INTO dbo.XX_CERIS_RETRO_TS_PREP_CONFIG_ERRORS
(
STATUS_RECORD_NUM_CREATED,
TS_DT,
EMPL_ID,
NOTES,
S_TS_TYPE_CD,
WORK_STATE_CD,
FY_CD,
PD_NO,
SUB_PD_NO,
CORRECTING_REF_DT,
PAY_TYPE,
GENL_LAB_CAT_CD,
S_TS_LN_TYPE_CD,
LAB_CST_AMT,
CHG_HRS,
WORK_COMP_CD,
LAB_LOC_CD,
ORG_ID,
ACCT_ID,
PROJ_ID,
BILL_LAB_CAT_CD,
REF_STRUC_1_ID,
REF_STRUC_2_ID,
ORG_ABBRV_CD,
PROJ_ABBRV_CD,
TS_HDR_SEQ_NO,
EFFECT_BILL_DT,
PROJ_ACCT_ABBRV_CD)
SELECT 
@in_STATUS_RECORD_NUM,
TS_DT,
EMPL_ID,
NOTES,
S_TS_TYPE_CD,
WORK_STATE_CD,
FY_CD,
PD_NO,
SUB_PD_NO,
CORRECTING_REF_DT,
PAY_TYPE,
GENL_LAB_CAT_CD,
S_TS_LN_TYPE_CD,
LAB_CST_AMT,
CHG_HRS,
WORK_COMP_CD,
LAB_LOC_CD,
ORG_ID,
ACCT_ID,
PROJ_ID,
BILL_LAB_CAT_CD,
REF_STRUC_1_ID,
REF_STRUC_2_ID,
ORG_ABBRV_CD,
PROJ_ABBRV_CD,
TS_HDR_SEQ_NO,
EFFECT_BILL_DT,
PROJ_ACCT_ABBRV_CD
FROM dbo.XX_CERIS_RETRO_TS_PREP  ts
WHERE 0 = (select count(1) 
			from imaps.deltek.ts_ln
			where empl_id=ts.empl_id
			and ts_dt=ts.ts_dt
			and s_ts_type_cd=ts.s_ts_type_cd
			and ts_hdr_seq_no=ts.ts_hdr_seq_no
			and notes=ts.notes)
--end archive records that errored out


-- verify that table XX_CERIS_RETRO_TS_PREP does have records to archive
select @row_count = COUNT(1) from dbo.XX_CERIS_RETRO_TS_PREP

IF @row_count > 0
   BEGIN
      PRINT 'Archive XX_CERIS_RETRO_TS_PREP data ...'

 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 615 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
      insert into dbo.XX_CERIS_RETRO_TS_PREP_ARCHIVAL
         (STATUS_RECORD_NUM, TS_DT, EMPL_ID, S_TS_TYPE_CD, WORK_STATE_CD, FY_CD, PD_NO, SUB_PD_NO,
          CORRECTING_REF_DT, PAY_TYPE, GENL_LAB_CAT_CD, S_TS_LN_TYPE_CD, LAB_CST_AMT, CHG_HRS, WORK_COMP_CD,
          LAB_LOC_CD, ORG_ID, ACCT_ID, PROJ_ID, BILL_LAB_CAT_CD, REF_STRUC_1_ID, REF_STRUC_2_ID, ORG_ABBRV_CD,
          PROJ_ABBRV_CD, TS_HDR_SEQ_NO, EFFECT_BILL_DT, PROJ_ACCT_ABBRV_CD, NOTES,
          TIME_STAMP)
         select @in_STATUS_RECORD_NUM, TS_DT, EMPL_ID, S_TS_TYPE_CD, WORK_STATE_CD, FY_CD, PD_NO, SUB_PD_NO,
                CORRECTING_REF_DT, PAY_TYPE , GENL_LAB_CAT_CD, S_TS_LN_TYPE_CD, LAB_CST_AMT, CHG_HRS, WORK_COMP_CD, 
                LAB_LOC_CD, ORG_ID, ACCT_ID, PROJ_ID, BILL_LAB_CAT_CD, REF_STRUC_1_ID, REF_STRUC_2_ID, ORG_ABBRV_CD, 
                PROJ_ABBRV_CD, TS_HDR_SEQ_NO, EFFECT_BILL_DT, PROJ_ACCT_ABBRV_CD, NOTES,
                CURRENT_TIMESTAMP
           from dbo.XX_CERIS_RETRO_TS_PREP

 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 631 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
      SELECT @SQLServer_error_code = @@ERROR

      IF @SQLServer_error_code <> 0
         BEGIN
            -- Attempt to insert records into table XX_CERIS_RETRO_TS_PREP_ARCHIVAL failed.
            SET @error_msg_placeholder1 = 'insert'
            SET @error_msg_placeholder2 = 'records into table XX_CERIS_RETRO_TS_PREP_ARCHIVAL'
            GOTO BL_ERROR_HANDLER
         END
   END









RETURN(0)

BL_ERROR_HANDLER:

 
PRINT convert(varchar, current_timestamp, 21) + ' : WORKDAY : Line 657 : XX_CERIS_ARCHIVE_DATA_SP.sql '
 
EXEC dbo.XX_ERROR_MSG_DETAIL
   @in_error_code           = @IMAPS_error_code,
   @in_display_requested    = 1,
   @in_SQLServer_error_code = @SQLServer_error_code,
   @in_placeholder_value1   = @error_msg_placeholder1,
   @in_placeholder_value2   = @error_msg_placeholder2,
   @in_calling_object_name  = @SP_NAME,
   @out_msg_text            = @out_STATUS_DESCRIPTION OUTPUT

RETURN(1)



END














