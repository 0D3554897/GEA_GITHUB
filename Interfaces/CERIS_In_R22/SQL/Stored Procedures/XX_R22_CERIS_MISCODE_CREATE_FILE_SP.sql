USE [IMAPSStg]
GO

IF OBJECT_ID('dbo.XX_R22_CERIS_MISCODE_CREATE_FILE_SP') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.XX_R22_CERIS_MISCODE_CREATE_FILE_SP
    IF OBJECT_ID('dbo.XX_R22_CERIS_MISCODE_CREATE_FILE_SP') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.XX_R22_CERIS_MISCODE_CREATE_FILE_SP >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.XX_R22_CERIS_MISCODE_CREATE_FILE_SP >>>'
END
go
SET ANSI_NULLS ON
go
SET QUOTED_IDENTIFIER OFF
go





CREATE PROCEDURE [DBO].[XX_R22_CERIS_MISCODE_CREATE_FILE_SP] 
(
@FILE_TO_REPROCESS SYSNAME  --MAKE SURE THIS POINTS TO THE SERVER UNC PATH
)  
AS

/***********************************************************************************************
Name:       XX_R22_CERIS_MISCODE_CREATE_FILE_SP
Author:     KM
Created:    11/04/2009
Purpose:    STEP 1 OF CERIS_R22 MISCODE PROCESS 

            Called by the SQL Server job which specifies the name and the storage location of
            the file to be created by this program.

            Call Example:
            execute IMAPSStg.dbo.XX_R22_CERIS_MISCODE_CREATE_FILE_SP 
               @FILE_TO_REPROCESS = '\\Ffx23dap23\interfaces\MISCODE\CERIS_R22_MISCODES.TXT'



Parameters:             
            INPUT:  @FILE_TO_REPROCESS -- server UNC path
            OUTPUT: THE FILE TO BE REPROCESSED

Notes:      Reference BP&S Service Request CR2350

06/20/2011  CR3856 removal of application ids T Perova

03/05/2012  CR4107 Change DB specfication from IMAPS to IMAR.
************************************************************************************************/

BEGIN
	
DECLARE @RET_CODE INT,
	@CURRENT_FY INT,
	@CURRENT_PERIOD INT,
	@CURRENT_SUBPERIOD INT,
	@FORMATFILE SYSNAME,
--	@PASSWORD SYSNAME,                CR3856
	@WORDS SYSNAME
	
--IF CERIS, ETIME, OR RATERETRO IS RUNNING,
--DON'T DO ANYTHING
	
SELECT @RET_CODE = COUNT(1)
  FROM DBO.XX_IMAPS_INT_STATUS
 WHERE INTERFACE_NAME IN ('CERIS_R22')
   AND STATUS_CODE NOT IN ('COMPLETED', 'SUCCESS_WITH_ERROR', 'DUPLICATE')

IF @RET_CODE <> 0
BEGIN 
   RAISERROR ('CERIS_R22 or ETIME_R22 IS RUNNING', 16, 1) 
   GOTO BL_ERROR_HANDLER
END

SELECT @RET_CODE = COUNT(1)
  FROM XX_ERROR_STATUS
 WHERE INTERFACE = 'CERIS_R22'
   AND CONTROL_PT <> 7

IF @RET_CODE <> 0
BEGIN 
   RAISERROR ('PREVIOUS CERIS_R22 MISCODE RUN STILL NEEDS TO BE CLOSED OUT', 16, 1) 
   GOTO BL_ERROR_HANDLER
END

INSERT INTO XX_ERROR_STATUS
	(STATUS_RECORD_NUM,
	 ERROR_SEQUENCE_NO, 
	 INTERFACE, PREPROCESSOR, 
	 STATUS, CONTROL_PT, 
	 TOTAL_COUNT, TOTAL_AMOUNT, 
	 SUCCESS_COUNT, SUCCESS_AMOUNT,
	 ERROR_COUNT, ERROR_AMOUNT,
	 TIME_STAMP)
 SELECT ts.STATUS_RECORD_NUM_CREATED, 
	(select isnull((max(error_sequence_no) + 1), 0)
	   from xx_error_status
	  where status_record_num = ts.STATUS_RECORD_NUM_CREATED
	), 
	'CERIS_R22', 'TS', 
	'PREPROCESSOR STARTED', 3, 
	COUNT(1), SUM(cast(ts.chg_hrs as decimal(14,2))),
	0, 0,
	0, 0,
	CURRENT_TIMESTAMP
   FROM XX_R22_CERIS_RETRO_TS_PREP_MISCODES ts
  WHERE STATUS_RECORD_NUM_REPROCESSED IS NULL
  GROUP BY ts.STATUS_RECORD_NUM_CREATED


-- SET VARIABLES
SET @CURRENT_FY = DATEPART(YEAR, GETDATE())
SET @CURRENT_PERIOD = DATEPART(MONTH, GETDATE())

SELECT @CURRENT_SUBPERIOD = A.SUB_PD_NO 
  FROM IMAR.DELTEK.SUB_PD A
 WHERE A.SUB_PD_END_DT =
	(SELECT MIN(B.SUB_PD_END_DT)
	   FROM IMAR.DELTEK.SUB_PD B   -- CR4107 03/05/2012
         WHERE (B.SUB_PD_NO = 2 OR
	        B.SUB_PD_NO = 3)
           AND DATEDIFF(DAY, GETDATE(), B.SUB_PD_END_DT) >= 0)
	
IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER


UPDATE XX_R22_CERIS_RETRO_TS_PREP_MISCODES
   SET FY_CD = @CURRENT_FY, 
       PD_NO = @CURRENT_PERIOD,
       SUB_PD_NO = @CURRENT_SUBPERIOD
 WHERE STATUS_RECORD_NUM_REPROCESSED IS NULL

IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER	

SELECT @FORMATFILE = PARAMETER_VALUE
  FROM XX_PROCESSING_PARAMETERS
 WHERE INTERFACE_NAME_CD = 'CERIS_R22'
   AND PARAMETER_NAME = 'RETRO_R22_TS_FORMAT_FILE'
	
IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER

/* SELECT @PASSWORD = PARAMETER_VALUE
  FROM XX_PROCESSING_PARAMETERS
 WHERE INTERFACE_NAME_CD = 'CERIS_R22'
   AND PARAMETER_NAME = 'IN_USER_PASSWORD'

IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER	   CR3856 */

-- LOAD STAGING TABLE
TRUNCATE TABLE XX_R22_CERIS_RETRO_TS_PREP

IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER
	
INSERT INTO XX_R22_CERIS_RETRO_TS_PREP
	(
	TS_DT, EMPL_ID, S_TS_TYPE_CD, WORK_STATE_CD, FY_CD, PD_NO, SUB_PD_NO, CORRECTING_REF_DT,
	PAY_TYPE, GENL_LAB_CAT_CD, S_TS_LN_TYPE_CD, LAB_CST_AMT, CHG_HRS, WORK_COMP_CD, LAB_LOC_CD,
	ORG_ID, ACCT_ID, PROJ_ID, BILL_LAB_CAT_CD, REF_STRUC_1_ID, REF_STRUC_2_ID, ORG_ABBRV_CD,
	PROJ_ABBRV_CD, TS_HDR_SEQ_NO, EFFECT_BILL_DT, PROJ_ACCT_ABBRV_CD, NOTES
	)
 SELECT TS_DT, EMPL_ID, S_TS_TYPE_CD, WORK_STATE_CD, FY_CD, PD_NO, SUB_PD_NO, CORRECTING_REF_DT,
	PAY_TYPE, GENL_LAB_CAT_CD, S_TS_LN_TYPE_CD, LAB_CST_AMT, CHG_HRS, WORK_COMP_CD, LAB_LOC_CD,
	ORG_ID, ACCT_ID, PROJ_ID, BILL_LAB_CAT_CD, REF_STRUC_1_ID, REF_STRUC_2_ID, ORG_ABBRV_CD,
	PROJ_ABBRV_CD, TS_HDR_SEQ_NO, EFFECT_BILL_DT, PROJ_ACCT_ABBRV_CD, NOTES
   FROM XX_R22_CERIS_RETRO_TS_PREP_MISCODES
  WHERE STATUS_RECORD_NUM_REPROCESSED IS NULL


IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER


--Employee Activation
    /*
    -- Mark employee's inactive if does not have any TC and not active EU in CP
    update IMAR.DELTEK.empl
    set s_empl_status_cd='IN'
    --select * from IMAR.DELTEK.empl
    where company_id=@in_company_id
    and empl_id not in (select empl_id from xx_r22_imaps_ts_prep_temp)
    and empl_id not in (select empl_id from IMAR.DELTEK.user_id where DE_ACTIVATION_DT = NULL )
    */

    update IMAR.DELTEK.empl
    set s_empl_status_cd='ACT'
    --select * from IMAR.DELTEK.empl
    where empl_id in (select empl_id from xx_r22_ceris_retro_ts_prep)
--END of Employee Activation

IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER
 
EXEC @RET_CODE = DBO.XX_EXEC_SHELL_CMD_OSUSER  --  CR3856 procedure changed
   @IN_IMAPS_DB_NAME = 'IMAPSSTG',
   @IN_IMAPS_TABLE_OWNER = 'DBO',
   @IN_SOURCE_TABLE = 'XX_R22_CERIS_RETRO_TS_PREP',
   @IN_FORMAT_FILE = @FORMATFILE,
   @IN_OUTPUT_FILE = @FILE_TO_REPROCESS,
 --  @IN_USR_PASSWORD = @PASSWORD,        CR3856
   @OUT_STATUS_DESCRIPTION = @WORDS
	
IF @RET_CODE <> 0
BEGIN
   PRINT @WORDS
   GOTO BL_ERROR_HANDLER
END

RETURN (0)

	
BL_ERROR_HANDLER:
	
PRINT 'ERROR CREATING FILE'
RETURN(1)

END



go
SET ANSI_NULLS OFF
go
SET QUOTED_IDENTIFIER OFF
go
IF OBJECT_ID('dbo.XX_R22_CERIS_MISCODE_CREATE_FILE_SP') IS NOT NULL
    PRINT '<<< CREATED PROCEDURE dbo.XX_R22_CERIS_MISCODE_CREATE_FILE_SP >>>'
ELSE
    PRINT '<<< FAILED CREATING PROCEDURE dbo.XX_R22_CERIS_MISCODE_CREATE_FILE_SP >>>'
go
