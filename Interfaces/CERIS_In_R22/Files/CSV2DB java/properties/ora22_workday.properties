#NOTICE: Every parameter must have some value. If not applicable, use N OR 0 (zero), as instructed

# for Div22 SQL Server Only
sql.serialxref=N

serialxref.email=N
serialxref.xlsname=N
serialxref.subject=N
serialxref.body=N
serialxref.mimeType=N


#to send emails re:missing data to a user
sql.missingxref=SELECT EMPLID,LNAME,FNAME,REG_TEMP,HIRE_DATE,JOB_FAMILY,POS_CODE,STATUS,DEPT,WRK_OFF,STD_HRS,FLSA_STAT,TERM_DT,DIVISION,JF_DT,POS_DT,LOA_BEG_DT,LOA_END_DT,LOA_TYPE,SAL_BAND,LEVEL_SUFFIX,DIVISION_FROM,DIVISION_STRT_DATE,MGR_SERIAL_NUM,MGR_LNAME,MGR_INITIAL,CURR_DIV_FUNC_CODE,CURR_REP_LEVEL_CODE,PREV_DIV_FUNC_CODE,PREV_REP_LEVEL_CODE,MGR2LAST,MGR2INIT,MGR3LAST,MGR3INIT,HIRETYPE,HIRPRGM,STAT3,SEPRSN,DEPTFROM,VACELGD,CMPLN,BLDGID,DEPT_ST_DATE,NAME_INIT,EMPL_STAT_DATE,EMPL_STAT3_DATE,LVL_DATE_1,POS_DESC,DEPT_SUF_DATE,DEPT_SHIFT_DTE,DEPT_SHIFT_1,MGR_FLAG,EXEMPT_DATE,HIRE_DATE_EFF,WORK_SCHD_DATE,CREATE_DATE,COMP_RATE,CREATED_BY FROM CFRPTADM.CP_R22_IBM_CERIS_MISSING WHERE CREATE_DATE = TRUNC(SYSDATE)
missingxref.headers=EMPLID,LNAME,FNAME,REG_TEMP,HIRE_DATE,JOB_FAMILY,POS_CODE,STATUS,DEPT,WRK_OFF,STD_HRS,FLSA_STAT,TERM_DT,DIVISION,JF_DT,POS_DT,LOA_BEG_DT,LOA_END_DT,LOA_TYPE,SAL_BAND,LEVEL_SUFFIX,DIVISION_FROM,DIVISION_STRT_DATE,MGR_SERIAL_NUM,MGR_LNAME,MGR_INITIAL,CURR_DIV_FUNC_CODE,CURR_REP_LEVEL_CODE,PREV_DIV_FUNC_CODE,PREV_REP_LEVEL_CODE,MGR2LAST,MGR2INIT,MGR3LAST,MGR3INIT,HIRETYPE,HIRPRGM,STAT3,SEPRSN,DEPTFROM,VACELGD,CMPLN,BLDGID,DEPT_ST_DATE,NAME_INIT,EMPL_STAT_DATE,EMPL_STAT3_DATE,LVL_DATE_1,POS_DESC,DEPT_SUF_DATE,DEPT_SHIFT_DTE,DEPT_SHIFT_1,MGR_FLAG,EXEMPT_DATE,HIRE_DATE_EFF,WORK_SCHD_DATE,CREATE_DATE,COMP_RATE,CREATED_BY
missingxref.mimeType=application/msexcel 
missingxref.xlsname=missing_data_ORA22.xls 
missingxref.subject=IBM Confidential: WORKDAY Records with Missing Data for Div22 (Oracle) 
missingxref.body=Generated from most recent WORKDAY input. Please see timestamp on attached file. 

sql.h_truncate=DELETE FROM CFRPTADM.CP_R22_IBM_CERIS
# does the csv include a distinct header record?  1=Y or 0=N
sql.h_header=1
#if so, do you want to process it separately?  1=Y or 0=N (ie, 0 means ignore it)
sql.h_process_header=0
#if so, provide the SQL statement to insert the header, otherwise N
# arrange the columns in any order you like
sql.h_insert=DELETE FROM CFRPTADM.CP_R22_IBM_CERIS

#if you want to insert a header line, you must include instructions, otherwise just make this value = 0
# to create the instruction that maps the CSV to your columns:
# a zero represents don't load the field into table, >0 means in which column (according to the insert statement) each field should be inserted, starting with first field in the CSV
# think of it as a value pair, CSV ordinal to SQL ordinal. 
#Example: value pairs: CSV column, sql insert column 
# 1,0; 2,1; 3,24; 4,9 (CSV first value is not used, CSV second value is first in sql, CSV third value is 24th in sql, CSV fourth value is ninth in sql.)
# However, you only specify the 2nd value of the value pair, because the CSV columns are already in order.  The order of the CSV columns is implied by their actual order.
# Therefore, the example instruction is expressed as 0,1,24,9
sql.h_includeColumn=0


# use encryption?
sql.useEncrypt=N
# SQL for encryption, otherwise N 
sql.writeKey=N
sql.readKey=N
sql.readSQLKeyPassword=N
sql.openSQLKey=N
sql.closeSQLKey=N

#data load
sql.truncate=DELETE FROM CFRPTADM.CP_R22_IBM_CERIS
# first, set up your SQL statement to load data into the target table
# arrange the columns in any order you like
sql.insert=INSERT INTO CFRPTADM.CP_R22_IBM_CERIS (EMPLID,LNAME,FNAME,REG_TEMP,HIRE_DATE,JOB_FAMILY,POS_CODE,STATUS,DEPT,WRK_OFF,STD_HRS,FLSA_STAT,TERM_DT,DIVISION,JF_DT,POS_DT,LOA_BEG_DT,LOA_END_DT,LOA_TYPE,SAL_BAND,LEVEL_SUFFIX,DIVISION_FROM,DIVISION_STRT_DATE,MGR_SERIAL_NUM,MGR_LNAME,MGR_INITIAL,CURR_DIV_FUNC_CODE,CURR_REP_LEVEL_CODE,PREV_DIV_FUNC_CODE,PREV_REP_LEVEL_CODE,MGR2LAST,MGR2INIT,MGR3LAST,MGR3INIT,HIRETYPE,HIRPRGM,STAT3,SEPRSN,DEPTFROM,VACELGD,CMPLN,BLDGID,DEPT_ST_DATE,NAME_INIT,EMPL_STAT_DATE,EMPL_STAT3_DATE,LVL_DATE_1,POS_DESC,DEPT_SUF_DATE,DEPT_SHIFT_DTE,DEPT_SHIFT_1,MGR_FLAG,EXEMPT_DATE,HIRE_DATE_EFF,WORK_SCHD_DATE,CREATE_DATE,COMP_RATE) VALUES (?,?,?,?,nvl(to_date(?,'YYYYMMDD'),null),?,?,?,?,?,to_number(?),?,nvl(to_date(?,'YYYYMMDD'),null),?,nvl(to_date(?,'YYYYMMDD'),null),nvl(to_date(?,'YYYYMMDD'),null),nvl(to_date(?,'YYYYMMDD'),null),nvl(to_date(?,'YYYYMMDD'),null),?,?,?,?,nvl(to_date(?,'YYYYMMDD'),null),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,nvl(to_date(?,'YYYYMMDD'),null),?,nvl(to_date(?,'YYYYMMDD'),null),nvl(to_date(?,'YYYYMMDD'),null),nvl(to_date(?,'YYYYMMDD'),null),?,nvl(to_date(?,'YYYYMMDD'),null),nvl(to_date(?,'YYYYMMDD'),null),?,?,?,nvl(to_date(?,'YYYYMMDD'),null),nvl(to_date(?,'YYYYMMDD'),null),trunc(sysdate),0)

# then SQL for when required data is missing (should be identical except for the table and created by)
sql.missing=INSERT INTO CFRPTADM.CP_R22_IBM_CERIS_MISSING (EMPLID,LNAME,FNAME,REG_TEMP,HIRE_DATE,JOB_FAMILY,POS_CODE,STATUS,DEPT,WRK_OFF,STD_HRS,FLSA_STAT,TERM_DT,DIVISION,JF_DT,POS_DT,LOA_BEG_DT,LOA_END_DT,LOA_TYPE,SAL_BAND,LEVEL_SUFFIX,DIVISION_FROM,DIVISION_STRT_DATE,MGR_SERIAL_NUM,MGR_LNAME,MGR_INITIAL,CURR_DIV_FUNC_CODE,CURR_REP_LEVEL_CODE,PREV_DIV_FUNC_CODE,PREV_REP_LEVEL_CODE,MGR2LAST,MGR2INIT,MGR3LAST,MGR3INIT,HIRETYPE,HIRPRGM,STAT3,SEPRSN,DEPTFROM,VACELGD,CMPLN,BLDGID,DEPT_ST_DATE,NAME_INIT,EMPL_STAT_DATE,EMPL_STAT3_DATE,LVL_DATE_1,POS_DESC,DEPT_SUF_DATE,DEPT_SHIFT_DTE,DEPT_SHIFT_1,MGR_FLAG,EXEMPT_DATE,HIRE_DATE_EFF,WORK_SCHD_DATE,CREATE_DATE,COMP_RATE,CREATED_BY) VALUES (NVL(TRIM(?),'MISSING'),?,?,?,?,?,?,?,NVL(TRIM(?),'MISSING'),?,?,?,?,NVL(TRIM(?),'MISSING'),?,?,?,?,?,?,?,?,NVL(TRIM(?),'MISSING'),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,NVL(TRIM(?),'MISSING'),?,?,?,?,?,?,?,?,?,?,?,?,trunc(sysdate),'0','MISSING')

# then create the instruction that maps the CSV to your columns
# a zero represents don't load the field into table, >0 means in which column (according to the insert statement) each field should be inserted, starting with first field in the CSV
# think of it as a value pair, CSV ordinal to SQL ordinal. 
#Example: value pairs: CSV column, sql insert column 
# 1,0; 2,1; 3,24; 4,9 (CSV first value is not used, CSV second value is first in sql, CSV third value is 24th in sql, CSV fourth value is ninth in sql.)
# However, you only specify the 2nd value of the value pair, because the CSV columns are already in order.  The order of the CSV columns is implied by their actual order.
# Therefore, the example instruction is expressed as 0,1,24,9
sql.includeColumn=0,1*,2,3,4,8,6,7,11,12,5,15,16,17,18,19,20,21,14*,22,23*,24,25,26,9*,10,13,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43*,44,45,46,47,48,49,50,51,52,42,54,55,0,0,0,0,0,0,0,0,0,0,0,0

# does the csv include records you want to skip? 1=Y or 0=N
skip.records=0
# create value pairs that correspond to the criteria for deletion, column#_to_check:value,column#_to_check:value,field#_to_check:value,field#_to_check:value....
# column number means the nth item in the SQL statement, not in the file
skip.criteria=22,stem
# keep track of a skip hash or total? 1=Y or 0=N
skip.count=0
# sql to use to update skip.hash as each record is processed
skip.SQL=UPDATE IMAPSSTG.DBO.XX_CERIS_DATA_HDR_STG SET HASH = coalesce(ltrim(rtrim(HASH)),'0') + CAST(CHARINDEX('xx',HASH) AS INT) + CAST(LTRIM(RTRIM(?)) as INT)