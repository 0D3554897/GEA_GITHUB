USE [IMAPSStg]
GO

/****** Object:  StoredProcedure [dbo].[XX_AR_CCIS_PROCESS_SP]    Script Date: 4/27/2020 4:21:40 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF EXISTS (SELECT * FROM DBO.SYSOBJECTS WHERE ID = OBJECT_ID(N'[DBO].[XX_AR_CCIS_PROCESS_SP]') AND OBJECTPROPERTY(ID, N'ISPROCEDURE') = 1)
   DROP PROCEDURE [DBO].[XX_AR_CCIS_PROCESS_SP]
GO

CREATE PROCEDURE [dbo].[XX_AR_CCIS_PROCESS_SP]
(
@in_STATUS_RECORD_NUM     integer,
@out_SQLServer_error_code integer      = NULL OUTPUT,
@out_STATUS_DESCRIPTION   varchar(275) = NULL OUTPUT
)
AS
/******************************************************************************************************
Name:       XX_AR_CCIS_PROCESS_SP
Author:     KM
Created:    12/2005
Purpose:    This stored procedure process the CCIS tables
Parameters: 
Result Set: 
Notes:      DR1360

CR-1543     05/20/2008 Costpoint multi-company fix (10 instances).
            Reference No. CP600000321

CR-11452    10/25/2019 Costpoint 7.1.1 Upgrade
            Fix RAISERROR() syntax errors in XX_AR_CASH_RECPT_HDR_INSTRIG, XX_AR_CASH_RECPT_TRN_INSTRIG
            which cause XX_AR_CASH_RECPT_HDR and XX_AR_CASH_RECPT_TRN record insert errors.
            Fix @FY_CD's data type in INSERT INTO dbo.XX_AR_CASH_RECPT_HDR statement.
            Change the precision and scale of local decimal variable to suit their DELTEK counterparts.
            04/27/2020 Limit the value of SUSER_SNAME() to 20 characters to fit the XX_AR_CASH_RECPT_HDR
            record's columns ENTR_USER_ID and MODIFIED_BY, and the XX_AR_CASH_RECPT_TRN record's column
            MODIFIED_BY. There are 6 instances.
*******************************************************************************************************/

BEGIN

DECLARE	@SP_NAME                 sysname,
        @IMAPS_error_number      integer,
        @SQLServer_error_code    integer,
        @row_count               integer,
        @error_msg_placeholder1  sysname,
        @error_msg_placeholder2  sysname,
	@INTERFACE_NAME	 	 sysname,
	@ret_code		 int,
	@FDS_DAYS_PASSED	 int,
        @DIV_16_COMPANY_ID       varchar(10)

-- set local const
SET @INTERFACE_NAME = 'AR_COLLECTION'
SET @SP_NAME = 'XX_AR_CCIS_PROCESS_SP'

-- CP600000321_Begin
SELECT @DIV_16_COMPANY_ID = PARAMETER_VALUE
  FROM dbo.XX_PROCESSING_PARAMETERS
 WHERE PARAMETER_NAME = 'COMPANY_ID'
   AND INTERFACE_NAME_CD = @INTERFACE_NAME
-- CP600000321_End

SELECT @FDS_DAYS_PASSED = CAST(PARAMETER_VALUE as int)
FROM dbo.XX_PROCESSING_PARAMETERS
WHERE PARAMETER_NAME = 'CCIS_FDS_DAYS_PASSED'
AND INTERFACE_NAME_CD = @INTERFACE_NAME

IF @FDS_DAYS_PASSED IS NULL SET @FDS_DAYS_PASSED = 0


-- 0. CHECK OUTPUT TABLES
SET @IMAPS_error_number = 212 -- %1 indicates a future %2.
SET @error_msg_placeholder1 = 'RECORDS EXISTING IN IMAPS.DELTEK.CASH_RECPT_HDR/TRN'
SET @error_msg_placeholder2 = 'PROBLEM.  INTERFACE WILL NOT PROCESS UNTIL THESE TABLES ARE EMPTY'

SELECT @row_count = (CASH_RECPT_HDR_KEY)
FROM IMAPS.DELTEK.CASH_RECPT_HDR
-- CP600000321_Begin
WHERE COMPANY_ID = @DIV_16_COMPANY_ID
-- CP600000321_End

IF @row_count <> 0 GOTO BL_ERROR_HANDLER


-- CR-11452 Begin
-- Disable redundant code
/*
SELECT @row_count = (CASH_RECPT_HDR_KEY)
FROM IMAPS.DELTEK.CASH_RECPT_HDR
-- CP600000321_Begin
WHERE COMPANY_ID = @DIV_16_COMPANY_ID
-- CP600000321_End

IF @row_count <> 0 GOTO BL_ERROR_HANDLER
*/

PRINT 'Tables DELTEK.CASH_RECPT_HDR and DELTEK.CASH_RECPT_TRN are emptied by a running the function Post Cash Receipts in Costpoint '
PRINT 'after a successfully completed CCIS interface run, so no show stopper (Error 212). Interface execution continues ...'
-- CR-11452 End


-- 1. TRUNCATE STAGING TABLE
SET @IMAPS_error_number = 204 -- Attempt to %1 %2 failed.
SET @error_msg_placeholder1 = 'truncate tables'
SET @error_msg_placeholder2 = ' XX_AR_CCIS_CLOSED_INVOICES, XX_AR_CASH_RECPTS_TRN'

PRINT 'Truncate three tables: XX_AR_CCIS_CLOSED_INVOICES, XX_AR_CASH_RECPT_TRN, XX_AR_CASH_RECPT_HDR'

TRUNCATE TABLE DBO.XX_AR_CCIS_CLOSED_INVOICES
TRUNCATE TABLE DBO.XX_AR_CASH_RECPT_TRN
TRUNCATE TABLE DBO.XX_AR_CASH_RECPT_HDR

SELECT @SQLServer_error_code = @@ERROR
IF @SQLServer_error_code <> 0 GOTO BL_ERROR_HANDLER



--   TRY TO
--2. KEEP TRACK OF INVOICES THAT CCIS CLOSED
SET @IMAPS_error_number = 204 -- Attempt to %1 %2 failed.
SET @error_msg_placeholder1 = 'load table'
SET @error_msg_placeholder2 = 'XX_AR_CCIS_CLOSED_INVOICES'

PRINT 'Try to keep track of invoices that CCIS closed: Insert XX_AR_CCIS_CLOSED_INVOICES records ...'

INSERT INTO DBO.XX_AR_CCIS_CLOSED_INVOICES
	(ACTIV_KEY, VALIDATED)
SELECT 	ACTIV_KEY, 'N'
FROM	DBO.XX_AR_CCIS_ACTIVITY
WHERE 	ACTIVIN in ('B', 'N', 'J') 
AND	ACTIVOUT not in (' ', 'P', 'F') -- CHANGE KM 4/10/06

IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER



--3. UPDATE VALIDATED FLAG FOR INVC_ID AND CUSTOMER NUMBERS
--   FOR THE CLOSED INVOICES THAT EXIST IN COSTPOINT
SET @IMAPS_error_number = 204 -- Attempt to %1 %2 failed.
SET @error_msg_placeholder1 = 'validate whether'
SET @error_msg_placeholder2 = 'invoices exist in Costpoint'


--ONLY USE RIGHT 7 CHARACTERS OF INVC_ID  
--BECAUSE IT GETS TRUNCATED WHEN SENDING TO FDS/CCS

PRINT 'For closed invoice transactions: Update XX_AR_CCIS_CLOSED_INVOICES.VALIDATED ...'

UPDATE DBO.XX_AR_CCIS_CLOSED_INVOICES
   SET VALIDATED = 'Y'
  FROM (DBO.XX_AR_CCIS_CLOSED_INVOICES CLOSED_KEY
	INNER JOIN
    	DBO.XX_AR_CCIS_ACTIVITY CCIS
	ON (CLOSED_KEY.ACTIV_KEY = CCIS.ACTIV_KEY)
       )
       INNER JOIN
       IMAPS.DELTEK.AR_HDR_HS IMAPS
       ON
       (CCIS.INVNO = RIGHT(IMAPS.INVC_ID, 7)
        AND RTRIM(LTRIM(IMAPS.ADDR_DC)) = CCIS.CUSTNO  --trim Costpoint CMR
        AND IMAPS.INVC_DT = CCIS.INVC_DT
        AND LEFT(IMAPS.PROJ_ID, 4) <> 'DDOU'
-- CP600000321_Begin
        AND IMAPS.COMPANY_ID = @DIV_16_COMPANY_ID
-- CP600000321_End
       )

IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER

PRINT 'For balancing invoice transactions: Update XX_AR_CCIS_OPEN_BALANCES.VALIDATED ...'

UPDATE 	DBO.XX_AR_CCIS_OPEN_BALANCES
SET 	VALIDATED = 'Y'
FROM 	DBO.XX_AR_CCIS_OPEN_BALANCES CCIS
	INNER JOIN
   	IMAPS.DELTEK.AR_HDR_HS IMAPS
	ON
        (CCIS.INVNO = RIGHT(IMAPS.INVC_ID, 7)
        AND RTRIM(LTRIM(IMAPS.ADDR_DC)) = CCIS.CUSTNO  --trim Costpoint CMR
         AND IMAPS.INVC_DT = CCIS.INVC_DT
	 AND LEFT(IMAPS.PROJ_ID, 4) <> 'DDOU'
-- CP600000321_Begin
         AND IMAPS.COMPANY_ID = @DIV_16_COMPANY_ID
-- CP600000321_End
        )

IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER



--4. ARCHIVE THE CLOSED TRANSACTIONS THAT FAILED VALIDATION
SET @IMAPS_error_number = 204 -- Attempt to %1 %2 failed.
SET @error_msg_placeholder1 = 'INSERT INTO'
SET @error_msg_placeholder2 = 'XX_AR_CCIS_ACTIV_ERRORS'

PRINT 'Archive closed transactions that failed validation: Insert XX_AR_CCIS_ACTIV_ERRORS records ...'

INSERT INTO DBO.XX_AR_CCIS_ACTIV_ERRORS
(STATUS_RECORD_NUM, 
 INVNO, INVC_DT, COMPANY, CUSTNO, CUSTNAME, CHECKDATE, CLEARDATE, ENTRYDATE, GROSSINV,
 TAXAMT, LPFAMT, ACTIVIN, ACTINMIN, ACTIVOUT, ACTOUTMIN, CHECKNO, DIRDEBIT, PPFLAG,
 PPD, REINSTATED, TIME_STAMP, PROCESSOR, SUBBATCH)
SELECT 
 @in_STATUS_RECORD_NUM, 
 INVNO, INVC_DT, COMPANY, CUSTNO, CUSTNAME, CHECKDATE, CLEARDATE, ENTRYDATE, GROSSINV,
 TAXAMT, LPFAMT, ACTIVIN, ACTINMIN, ACTIVOUT, ACTOUTMIN, CHECKNO, DIRDEBIT, PPFLAG,
 PPD, REINSTATED, TIME_STAMP, PROCESSOR, SUBBATCH
FROM DBO.XX_AR_CCIS_ACTIVITY
WHERE ACTIV_KEY IN (SELECT ACTIV_KEY FROM DBO.XX_AR_CCIS_CLOSED_INVOICES WHERE VALIDATED='N')

IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER


--5. ARCHIVE THE OPEN INVOICES THAT FAILED VALIDATION
SET @IMAPS_error_number = 204 -- Attempt to %1 %2 failed.
SET @error_msg_placeholder1 = 'INSERT INTO'
SET @error_msg_placeholder2 = 'XX_AR_CCIS_OPEN_BALANCES_ARCH'

PRINT 'Archive open invoices that failed validation: Insert XX_AR_CCIS_OPEN_BALANCES_ARCH records ...'

INSERT INTO DBO.XX_AR_CCIS_OPEN_BALANCES_ARCH
(INVNO, CUSTNO, INVC_DT, BALANCE, VALIDATED, STATUS_RECORD_NUM)
SELECT INVNO, CUSTNO, INVC_DT, BALANCE, VALIDATED, @in_STATUS_RECORD_NUM
FROM DBO.XX_AR_CCIS_OPEN_BALANCES
WHERE VALIDATED = 'N'

IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER


PRINT 'Update XX_IMAPS_INT_STATUS.RECORD_COUNT_INITIAL ...'

--6. UPDATE STATUS TABLE WITH NUMBER OF RECORDS INITIAL
SET @IMAPS_error_number = 204 -- Attempt to %1 %2 failed.
SET @error_msg_placeholder1 = 'UPDATE STATUS RECORD'
SET @error_msg_placeholder2 = 'INITIAL COUNT'

DECLARE @row_count_closed int,
	@row_count_open int

SELECT @row_count_closed = count(ACTIV_KEY) 
FROM DBO.XX_AR_CCIS_CLOSED_INVOICES
WHERE VALIDATED in ('N', 'Y')

SELECT @row_count_open = count(INVNO) 
FROM DBO.XX_AR_CCIS_OPEN_BALANCES
WHERE VALIDATED in ('N', 'Y')

-- CHANGE KM 4/10/06 
-- OPEN FILE IS THE ONLY FILE THAT WE REALLY CARE ABOUT
UPDATE DBO.XX_IMAPS_INT_STATUS
   SET RECORD_COUNT_INITIAL = @row_count_open,
       MODIFIED_BY = SUSER_SNAME(),
       MODIFIED_DATE = GETDATE()
WHERE STATUS_RECORD_NUM = @in_STATUS_RECORD_NUM

IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER



--7. UPDATE STATUS TABLE WITH NUMBER OF RECORDS ERROR
SET @IMAPS_error_number = 204 -- Attempt to %1 %2 failed.
SET @error_msg_placeholder1 = 'UPDATE STATUS RECORD'
SET @error_msg_placeholder2 = 'ERROR COUNT'

PRINT 'Update XX_IMAPS_INT_STATUS.RECORD_COUNT_ERROR ...'

SELECT @row_count_closed = count(ACTIV_KEY) 
FROM DBO.XX_AR_CCIS_CLOSED_INVOICES
WHERE  VALIDATED = 'N'

SELECT @row_count_open = count(INVNO) 
FROM DBO.XX_AR_CCIS_OPEN_BALANCES
WHERE VALIDATED = 'N'

-- CHANGE KM 4/10/06 
-- OPEN FILE IS THE ONLY FILE THAT WE REALLY CARE ABOUT
UPDATE DBO.XX_IMAPS_INT_STATUS
   SET RECORD_COUNT_ERROR = @row_count_open,
       MODIFIED_BY = SUSER_SNAME(),
       MODIFIED_DATE = GETDATE()
WHERE STATUS_RECORD_NUM = @in_STATUS_RECORD_NUM

IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER




--8. DON'T TRY TO PROCESS IF NOTHING PASSED VALIDATION
SET @IMAPS_error_number = 209 -- No %1 exist to %2..
SET @error_msg_placeholder1 = 'valid closed invoices'
SET @error_msg_placeholder2 = 'to process'

PRINT 'Update XX_IMAPS_INT_STATUS.RECORD_COUNT_SUCCESS ...'

SELECT @row_count_closed = count(ACTIV_KEY) 
FROM DBO.XX_AR_CCIS_CLOSED_INVOICES
WHERE  VALIDATED = 'Y'

SELECT @row_count_open = count(INVNO) 
FROM DBO.XX_AR_CCIS_OPEN_BALANCES
WHERE VALIDATED = 'Y'

-- CHANGE KM 4/10/06 
-- OPEN FILE IS THE ONLY FILE THAT WE REALLY CARE ABOUT
UPDATE DBO.XX_IMAPS_INT_STATUS
   SET RECORD_COUNT_SUCCESS = @row_count_open,
       MODIFIED_BY = SUSER_SNAME(),
       MODIFIED_DATE = GETDATE()
 WHERE STATUS_RECORD_NUM = @in_STATUS_RECORD_NUM

IF @row_count_open = 0 GOTO NO_INVOICES_PASSED_VALIDATION

PRINT 'Preparing to insert XX_AR_CASH_RECPT_HDR records ...'

--9. DECLARE/SET CONSTANTS
SET @IMAPS_error_number = 204 -- Attempt to %1 %2 failed.
SET @error_msg_placeholder1 = 'load data constants'
SET @error_msg_placeholder2 = '(static & calculated)'

--FIRST ATTEMPT TO RECORD
DECLARE @INVC_ID            VARCHAR(15),
        @INVC_DT            DATETIME,
        @ENTRY_DT           DATETIME,
        @CHK_NO             INT,
        @TRN_DESC           VARCHAR(30),
        @CASH_RECPT_HDR_KEY INT,
        @FY_CD              INT,             -- Column XX_AR_CASH_RECPT_HDR.FY_CD is defined as VARCHAR(6) NOT NULL.
        @PD_NO              INT,
        @SUB_PD_NO          INT,
        @LN_NO              INT,
        @S_JNL_CD           VARCHAR(3),
        @COMPANY_ID         VARCHAR(10),
        @ADVANCE_FL         VARCHAR(1),
        @PAY_CRNCY_CD       VARCHAR(3),
        @RATE_GRP_ID        VARCHAR(6),

        @TRN_TO_EUR_RT      DECIMAL(28, 15), -- change the precision from 14 to 28 and the scale from 7 to 15
        @EUR_TO_FUNC_RT     DECIMAL(28, 15), -- change the precision from 14 to 28 and the scale from 7 to 15
        @DISC_TAKEN_AMT     DECIMAL(17, 2),  -- change the precision from 14 to 17
        @TRN_AMT            DECIMAL(17, 2),  -- Not used (@ZERO_DOLLAR is used indtead): change the precision from 14 to 17
        @ZERO_DOLLAR        DECIMAL(17, 2),  -- change the precision from 14 to 17

        @TRN_TO_EUR_RT_FL   VARCHAR(1),
        @TRN_FREEZE_RT_FL   VARCHAR(1),
        @BANK_DEPOSIT_NO    VARCHAR(15),
        @OVR_BUD_FL         VARCHAR(1),
        @DOC_LOCATION       VARCHAR(254),
        @ROWVERSION         INT,
        @TVL_ADV_ID         VARCHAR(10),
        @TVL_ADV_HDR_KEY    INT,
        @TVL_ADV_LN_KEY     INT,
        @CASH_ACCT_LINE_FL  VARCHAR(1),
        @S_LINE_SOURCE_CD   VARCHAR(1),
        @ACCT_ID            VARCHAR(15),
        @ORG_ABBRV_CD       VARCHAR(6),
        @PROJ_ABBRV_CD      VARCHAR(6),
        @ORG_ID             VARCHAR(20),
        @BLANK              VARCHAR(1)
	
--  CALCULATE PARAMETERS
SET @IMAPS_error_number = 204 -- Attempt to %1 %2 failed.
SET @error_msg_placeholder1 = 'SET PROCESSING'
SET @error_msg_placeholder2 = 'PARAMETERS'

SELECT @FY_CD = fiscal_year,
       @PD_NO = period,
       @SUB_PD_NO = sub_pd_no
  FROM dbo.XX_FIWLR_RUNDATE_ACCTCAL
 WHERE CAST(run_start_date as datetime) <= GETDATE()
   AND CAST(run_end_date as datetime) >= GETDATE()

SELECT @SQLServer_error_code = @@ERROR
IF @SQLServer_error_code <> 0 GOTO BL_ERROR_HANDLER

IF @FY_CD IS NULL GOTO BL_ERROR_HANDLER
IF @PD_NO IS NULL GOTO BL_ERROR_HANDLER
IF @SUB_PD_NO IS NULL GOTO BL_ERROR_HANDLER

SELECT @CASH_RECPT_HDR_KEY = (MAX(CASH_RECPT_HDR_KEY) + 1)
  FROM IMAPS.DELTEK.CASH_RECPT_HDR_HS
 WHERE COMPANY_ID = @DIV_16_COMPANY_ID

IF @CASH_RECPT_HDR_KEY IS NULL
   SET @CASH_RECPT_HDR_KEY = 1

-- CONSTANT PARAMETERS
SET @S_JNL_CD = 'CR'
SET @COMPANY_ID = '1'
SET @ADVANCE_FL = 'N'
SET @PAY_CRNCY_CD = 'USD'
SET @RATE_GRP_ID = ' '
SET @TRN_TO_EUR_RT = 1.0000000
SET @EUR_TO_FUNC_RT = 1.0000000
SET @TRN_TO_EUR_RT_FL = 'N'
SET @TRN_FREEZE_RT_FL = 'N'
SET @BANK_DEPOSIT_NO = ' '
SET @OVR_BUD_FL = 'N'
SET @DOC_LOCATION = ' '
SET @ROWVERSION = 0
SET @ORG_ABBRV_CD = ' '
SET @PROJ_ABBRV_CD = ' '
SET @TVL_ADV_ID = ' '
SET @TVL_ADV_HDR_KEY = 0
SET @TVL_ADV_LN_KEY = 0
SET @CASH_ACCT_LINE_FL = ' '
SET @S_LINE_SOURCE_CD = 'I'
SET @ZERO_DOLLAR = .00
SET @ACCT_ID = '20-08-30' -- FOR CASH RECEIPTS

--BEGIN DR #725
SELECT @ACCT_ID = PARAMETER_VALUE
  FROM dbo.XX_PROCESSING_PARAMETERS
 WHERE INTERFACE_NAME_CD = 'AR_COLLECTION'
   AND PARAMETER_NAME = 'CLEARING_ACCT_ID'
--END DR #725

SET @ORG_ID = '16'	  -- FOR CASH RECEIPTS
SET @BLANK = ' '
SET @ENTRY_DT = GETDATE()
SET @CHK_NO = 0
SET @DISC_TAKEN_AMT = .00
SET @LN_NO = 1

IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER


PRINT 'Insert staging cash receipts header record (only one XX_AR_CASH_RECPT_HDR record for each interface run) ...'

--10. INSERT CASH RECEIPTS STAGING HEADER RECORD
--    ONLY 1 HEADER RECORD FOR EACH INTERFACE RUN
SET @IMAPS_error_number = 204 -- Attempt to %1 %2 failed.
SET @error_msg_placeholder1 = 'INSERT TO'
SET @error_msg_placeholder2 = 'XX_AR_CASH_RECPT_HDR'

INSERT INTO DBO.XX_AR_CASH_RECPT_HDR
   (CASH_RECPT_HDR_KEY, FY_CD, PD_NO, CASH_RECPT_NO, SUB_PD_NO,
    ENTR_USER_ID, ENTR_DTT, 
    S_JNL_CD, RECPT_DT, MODIFIED_BY, TIME_STAMP,
    COMPANY_ID, ADVANCE_FL, PAY_CRNCY_CD, PAY_CRNCY_DT,
    RATE_GRP_ID, TRN_TO_EUR_RT, EUR_TO_FUNC_RT, TRN_TO_EUR_RT_FL, TRN_FREEZE_RT_FL,
    BANK_DEPOSIT_NO, OVR_BUD_FL, DOC_LOCATION, ROWVERSION)
   SELECT @CASH_RECPT_HDR_KEY, CAST(@FY_CD as varchar(6)), @PD_NO, @CASH_RECPT_HDR_KEY, @SUB_PD_NO, -- CR-11452 Fix @FY_CD's data type
          CAST(SUSER_SNAME() as varchar(20)), GETDATE(), -- CR-11452
          @S_JNL_CD, @ENTRY_DT, CAST(SUSER_SNAME() as varchar(20)), GETDATE(), -- CR-11452
          @COMPANY_ID, @ADVANCE_FL, @PAY_CRNCY_CD, GETDATE(),
          @RATE_GRP_ID, @TRN_TO_EUR_RT, @EUR_TO_FUNC_RT, @TRN_TO_EUR_RT_FL, @TRN_FREEZE_RT_FL,
          @BANK_DEPOSIT_NO, @OVR_BUD_FL, @DOC_LOCATION, @ROWVERSION

IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER


-- CHANGE KM 4/10/06 
-- OPEN FILE IS THE ONLY FILE THAT WE REALLY CARE ABOUT
--IF @row_count_closed = 0 GOTO NO_CLOSED_INVOICES_PASSED_VALIDATION


-- CHANGE KM 4/10/06 
-- OPEN FILE IS THE ONLY FILE THAT WE REALLY CARE ABOUT
-- PAID FILE (ACTIVITY FILE) SHOULD ONLY BE USED FOR LINKAGE
-- MUST ASSUME THAT WHATEVER IS NOT IN THE OPEN FILE HAS BEEN CLOSED


PRINT 'Insert closed invoice balancing transactions to XX_AR_CASH_RECPT_TRN ...'

--11. INSERT CLOSED INVOICE TRANSACTIONS 
--    TO XX_AR_CASH_RECPT_TRN
SET @IMAPS_error_number = 204 -- Attempt to %1 %2 failed.
SET @error_msg_placeholder1 = 'INSERT CLOSED INVOICE TRANSACTIONS TO'
SET @error_msg_placeholder2 = 'XX_AR_CASH_RECPT_TRN'


-- CLOSED INVOICE TRANSACTIONS
-- THESE WILL HAVE PROCESSOR + SUBBATCH LINKED TO IT
SELECT  @ret_code = COUNT(1)
FROM   	IMAPS.DELTEK.AR_HDR_HS IMAPS
WHERE	IMAPS.BAL_DUE_AMT <> .00
AND 	LEFT(IMAPS.PROJ_ID, 4) <> 'DDOU'
AND	RIGHT(IMAPS.INVC_ID, 7) + LTRIM(RTRIM(IMAPS.ADDR_DC)) /*trim CMR*/ + CONVERT(char(10), IMAPS.INVC_DT, 120) NOT IN 
	(SELECT INVNO + RTRIM(CUSTNO) + INVC_DT FROM XX_AR_CCIS_OPEN_BALANCES WHERE VALIDATED = 'Y')
-- CP600000321_Begin
AND 	IMAPS.COMPANY_ID = @DIV_16_COMPANY_ID
-- CP600000321_End

IF(@ret_code <> 0)
BEGIN
   INSERT INTO DBO.XX_AR_CASH_RECPT_TRN
      (CASH_RECPT_HDR_KEY, LN_NO, ACCT_ID, ORG_ID, ORG_ABBRV_CD,
       PROJ_ID, PROJ_ABBRV_CD, REF1_ID, REF2_ID, INVC_ID, CUST_ID, CHK_NO, 
       TRN_DESC, 
       DISC_TAKEN_AMT, TRN_AMT, MODIFIED_BY,
       TIME_STAMP, TVL_ADV_ID, TVL_ADV_HDR_KEY, TVL_ADV_LN_KEY, CASH_ACCT_LINE_FL,
       S_LINE_SOURCE_CD, PAY_TRN_AMT, PAY_DISC_TAKEN_AMT, TRN_TRN_AMT, TRN_DISC_TAKEN_AMT,
       MU_REAL_GAIN_AMT, MU_REAL_LOSS_AMT, TRN_FINCHG_RCV_AMT, PAY_FINCHG_RCV_AMT,
       FINCHG_RCV_AMT, ROWVERSION)
      SELECT @CASH_RECPT_HDR_KEY, @LN_NO, IMAPS.RCV_ACCT_ID, IMAPS.RCV_ORG_ID, @ORG_ABBRV_CD,
             IMAPS.PROJ_ID, @PROJ_ABBRV_CD, IMAPS.RCV_REF1_ID, IMAPS.RCV_REF2_ID, IMAPS.INVC_ID, IMAPS.CUST_ID, @CHK_NO, 
             ISNULL((SELECT TOP 1 CCIS.ACTIVOUT + CCIS.ACTOUTMIN + ' ' + CCIS.PROCESSOR + ' ' + CCIS.SUBBATCH 
                       FROM dbo.XX_AR_CCIS_ACTIVITY CCIS
                      WHERE CCIS.INVNO = RIGHT(IMAPS.INVC_ID, 7)
                        AND LTRIM(RTRIM(IMAPS.ADDR_DC)) /*trim CMR*/ = CCIS.CUSTNO
                        AND LEFT(IMAPS.PROJ_ID, 4) <> 'DDOU'
                        AND IMAPS.INVC_DT = CCIS.INVC_DT
                        AND CCIS.ACTIVIN in ('B', 'N', 'J') 
                        AND CCIS.ACTIVOUT not in (' ', 'P', 'F')
                    ),
                    'Invoice Closed'
                   ),
             @DISC_TAKEN_AMT, (-1.0 * IMAPS.BAL_DUE_AMT), CAST(SUSER_SNAME() as varchar(20)), -- CR-11452
             GETDATE(), @TVL_ADV_ID, @TVL_ADV_HDR_KEY, @TVL_ADV_LN_KEY, @CASH_ACCT_LINE_FL,
             @S_LINE_SOURCE_CD, 
             (-1.0 * IMAPS.BAL_DUE_AMT), @ZERO_DOLLAR, 
             (-1.0 * IMAPS.BAL_DUE_AMT), @ZERO_DOLLAR,
             @ZERO_DOLLAR, @ZERO_DOLLAR, @ZERO_DOLLAR, @ZERO_DOLLAR, 
             @ZERO_DOLLAR, @ROWVERSION
        FROM IMAPS.DELTEK.AR_HDR_HS IMAPS
             INNER JOIN
             DBO.XX_IMAPS_INVOICE_SENT SENT
             ON
             (
              IMAPS.INVC_ID = SENT.INVC_ID
              AND (SENT.TIME_STAMP+@FDS_DAYS_PASSED) < GETDATE()
             )
       WHERE IMAPS.BAL_DUE_AMT <> .00
         AND LEFT(IMAPS.PROJ_ID, 4) <> 'DDOU'
         AND RIGHT(IMAPS.INVC_ID, 7) + LTRIM(RTRIM(IMAPS.ADDR_DC)) /*trim CMR*/ + CONVERT(char(10), IMAPS.INVC_DT, 120) NOT IN 
                (SELECT INVNO + RTRIM(CUSTNO) + INVC_DT FROM XX_AR_CCIS_OPEN_BALANCES WHERE VALIDATED = 'Y')
         AND IMAPS.COMPANY_ID = @DIV_16_COMPANY_ID
END

IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER


-- CHANGE KM 4/10/06
-- NO_CLOSED_INVOICES_PASSED_VALIDATION:


PRINT 'Insert open invoice balancing transactions to XX_AR_CASH_RECPT_TRN ...'

--12. INSERT OPEN INVOICE BALANCING TRANSACTIONS 
--    TO XX_AR_CASH_RECPT_TRN
SET @IMAPS_error_number = 204 -- Attempt to %1 %2 failed.
SET @error_msg_placeholder1 = 'INSERT OPEN INVOICE TRANSACTIONS TO'
SET @error_msg_placeholder2 = 'XX_AR_CASH_RECPT_TRN'
SET @TRN_DESC = 'CCIS Open Balance Synchronization'

SELECT @ret_code = COUNT(1)
  FROM DBO.XX_AR_CCIS_OPEN_BALANCES CCIS
       INNER JOIN
       IMAPS.DELTEK.AR_HDR_HS IMAPS
       ON
       (
        CCIS.INVNO = RIGHT(IMAPS.INVC_ID, 7) 
        AND LTRIM(RTRIM(IMAPS.ADDR_DC)) /*trim CMR*/ = CCIS.CUSTNO
        AND IMAPS.BAL_DUE_AMT <> CAST(CCIS.BALANCE AS decimal(14, 2))
        AND LEFT(IMAPS.PROJ_ID, 4) <> 'DDOU'
        AND IMAPS.INVC_DT = CCIS.INVC_DT
        AND CCIS.VALIDATED = 'Y'
-- CP600000321_Begin
        AND IMAPS.COMPANY_ID = @DIV_16_COMPANY_ID
-- CP600000321_End
)

IF(@ret_code <> 0)
BEGIN
	--BEGIN DR 1360
	INSERT INTO DBO.XX_AR_CASH_RECPT_TRN
	(CASH_RECPT_HDR_KEY, LN_NO, ACCT_ID, ORG_ID, ORG_ABBRV_CD,
	 PROJ_ID, PROJ_ABBRV_CD, REF1_ID, REF2_ID, INVC_ID, CUST_ID, CHK_NO, 
	 TRN_DESC, 
	 DISC_TAKEN_AMT,
         TRN_AMT,
         MODIFIED_BY,
	 TIME_STAMP, TVL_ADV_ID, TVL_ADV_HDR_KEY, TVL_ADV_LN_KEY, CASH_ACCT_LINE_FL,
	 S_LINE_SOURCE_CD, PAY_TRN_AMT, PAY_DISC_TAKEN_AMT, TRN_TRN_AMT, TRN_DISC_TAKEN_AMT,
	 MU_REAL_GAIN_AMT, MU_REAL_LOSS_AMT, TRN_FINCHG_RCV_AMT, PAY_FINCHG_RCV_AMT,
	 FINCHG_RCV_AMT, ROWVERSION)
	SELECT  @CASH_RECPT_HDR_KEY, @LN_NO, IMAPS.RCV_ACCT_ID, IMAPS.RCV_ORG_ID, @ORG_ABBRV_CD,
		IMAPS.PROJ_ID, @PROJ_ABBRV_CD, IMAPS.RCV_REF1_ID, IMAPS.RCV_REF2_ID, IMAPS.INVC_ID, IMAPS.CUST_ID, @CHK_NO, 
		@TRN_DESC, 
		@DISC_TAKEN_AMT, 
		CAST( (-1.0 * (IMAPS.BAL_DUE_AMT - SUM(CAST(CCIS.BALANCE AS decimal(14, 2))) )) as decimal(14,2)),
                CAST(SUSER_SNAME() as varchar(20)), -- CR-11452
		GETDATE(), @TVL_ADV_ID, @TVL_ADV_HDR_KEY, @TVL_ADV_LN_KEY, @CASH_ACCT_LINE_FL,
		@S_LINE_SOURCE_CD, 
		CAST( (-1.0 * (IMAPS.BAL_DUE_AMT - SUM(CAST(CCIS.BALANCE AS decimal(14, 2))) )) as decimal(14,2)), @ZERO_DOLLAR, 
	        CAST( (-1.0 * (IMAPS.BAL_DUE_AMT - SUM(CAST(CCIS.BALANCE AS decimal(14, 2))) )) as decimal(14,2)), @ZERO_DOLLAR,
		@ZERO_DOLLAR, @ZERO_DOLLAR, @ZERO_DOLLAR, @ZERO_DOLLAR, 
		@ZERO_DOLLAR, @ROWVERSION
	FROM   	DBO.XX_AR_CCIS_OPEN_BALANCES CCIS
		INNER JOIN
		IMAPS.DELTEK.AR_HDR_HS IMAPS
		ON
		(
		CCIS.INVNO = RIGHT(IMAPS.INVC_ID, 7) 
		AND LTRIM(RTRIM(IMAPS.ADDR_DC)) /*trim CMR*/ = CCIS.CUSTNO
		AND LEFT(IMAPS.PROJ_ID, 4) <> 'DDOU'
		AND IMAPS.INVC_DT = CCIS.INVC_DT
		AND CCIS.VALIDATED = 'Y'
-- CP600000321_Begin
        	AND IMAPS.COMPANY_ID = @DIV_16_COMPANY_ID
-- CP600000321_End
		)
	GROUP BY 
	IMAPS.RCV_ACCT_ID, IMAPS.RCV_ORG_ID,
	IMAPS.PROJ_ID, IMAPS.RCV_REF1_ID, IMAPS.RCV_REF2_ID, IMAPS.INVC_ID, IMAPS.CUST_ID, IMAPS.BAL_DUE_AMT 
	HAVING IMAPS.BAL_DUE_AMT <> SUM(CAST(CCIS.BALANCE AS decimal(14,2)))
	--END DR 1360
END

IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER


PRINT 'Insert valid transactions to XX_AR_CCIS_OPEN_BALANCES_ARCH ...'


--13. INSERT VALID TO XX_AR_CCIS_OPEN_BALANCES_ARCH
--    INVALID TRANSACTIONS HAVE ALREADY BEEN LOADED
SET @IMAPS_error_number = 204 -- Attempt to %1 %2 failed.
SET @error_msg_placeholder1 = 'INSERT VALID TRANSACTIONS TO'
SET @error_msg_placeholder2 = 'XX_AR_CCIS_OPEN_BALANCES_ARCH'

INSERT INTO DBO.XX_AR_CCIS_OPEN_BALANCES_ARCH
   (INVNO, CUSTNO, INVC_DT, BALANCE, VALIDATED, IMAPS_INVC_ID, 
    IMAPS_BALANCE,
    TRN_AMT, 
    STATUS_RECORD_NUM)
   SELECT CCIS.INVNO, CCIS.CUSTNO, CCIS.INVC_DT, CCIS.BALANCE, CCIS.VALIDATED, IMAPS.INVC_ID,
          IMAPS.BAL_DUE_AMT, 
          CAST( (-1.0 * (IMAPS.BAL_DUE_AMT - CAST(CCIS.BALANCE AS decimal(14, 2)))) as decimal(14,2)),
          @in_STATUS_RECORD_NUM
     FROM DBO.XX_AR_CCIS_OPEN_BALANCES CCIS
          INNER JOIN
          IMAPS.DELTEK.AR_HDR_HS IMAPS
          ON
          (
           CCIS.INVNO = RIGHT(IMAPS.INVC_ID, 7) 
           AND LTRIM(RTRIM(IMAPS.ADDR_DC)) /*trim CMR*/ = CCIS.CUSTNO
           AND IMAPS.INVC_DT = CCIS.INVC_DT
           AND IMAPS.BAL_DUE_AMT <> .00
           AND LEFT(IMAPS.PROJ_ID, 4) <> 'DDOU'
           AND CCIS.VALIDATED = 'Y'
-- CP600000321_Begin
           AND IMAPS.COMPANY_ID = @DIV_16_COMPANY_ID
-- CP600000321_End
          )

IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER




--14. INSERT BALANCING TRANSACTIONS TO XX_AR_CASH_RECPT_TRN
--select * from xx_imaps_inv_out_sum
DECLARE @SUMMARY_AMT decimal(14, 2)
SET @IMAPS_error_number = 204 -- Attempt to %1 %2 failed.
SET @error_msg_placeholder1 = 'INSERT DETAILS TO'
SET @error_msg_placeholder2 = 'XX_AR_CASH_RECPT_TRN'
SET @TRN_DESC = 'A/R Cleared Summary'

SELECT 	@ret_code = COUNT(1)
FROM 	XX_AR_CASH_RECPT_TRN

IF(@ret_code <> 0)
BEGIN

	--KM 1M changes

	-- 1st 16, then 1M
        PRINT 'Insert balancing transactions to XX_AR_CASH_RECPT_TRN for Division 16 ...'

	SET @IMAPS_error_number = 204 -- Attempt to %1 %2 failed.
	SET @error_msg_placeholder1 = 'INSERT DETAILS for 16 TO'
	SET @error_msg_placeholder2 = 'XX_AR_CASH_RECPT_TRN'

	SET @ORG_ID = '16'	 

	SELECT @ACCT_ID = PARAMETER_VALUE
	FROM dbo.XX_PROCESSING_PARAMETERS
	WHERE INTERFACE_NAME_CD = 'AR_COLLECTION'
	AND PARAMETER_NAME = 'CLEARING_ACCT_ID'


	-- GET SUMMARY_AMT
	SELECT	@SUMMARY_AMT = isnull(SUM(-1.0 * TRN_AMT), 0)
	FROM	XX_AR_CASH_RECPT_TRN
	WHERE	LEFT(ORG_ID,2)='16'
	

	IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER

	
	-- BALANCING TRANSACTION IS SUMMARY FOR A/R Cleared
	INSERT INTO DBO.XX_AR_CASH_RECPT_TRN
	(CASH_RECPT_HDR_KEY, LN_NO, ACCT_ID, ORG_ID, ORG_ABBRV_CD,
	 PROJ_ABBRV_CD, INVC_ID, CHK_NO, TRN_DESC, DISC_TAKEN_AMT, TRN_AMT, MODIFIED_BY,
	 TIME_STAMP, TVL_ADV_ID, TVL_ADV_HDR_KEY, TVL_ADV_LN_KEY, CASH_ACCT_LINE_FL,
	 S_LINE_SOURCE_CD, PAY_TRN_AMT, PAY_DISC_TAKEN_AMT, TRN_TRN_AMT, TRN_DISC_TAKEN_AMT,
	 MU_REAL_GAIN_AMT, MU_REAL_LOSS_AMT, TRN_FINCHG_RCV_AMT, PAY_FINCHG_RCV_AMT,
	 FINCHG_RCV_AMT, ROWVERSION)
	SELECT  @CASH_RECPT_HDR_KEY, @LN_NO, @ACCT_ID, @ORG_ID, @ORG_ABBRV_CD,
		@PROJ_ABBRV_CD, @BLANK, @CHK_NO, @TRN_DESC, @DISC_TAKEN_AMT, @SUMMARY_AMT, CAST(SUSER_SNAME() as varchar(20)), -- CR-11452
		GETDATE(), @TVL_ADV_ID, @TVL_ADV_HDR_KEY, @TVL_ADV_LN_KEY, @CASH_ACCT_LINE_FL,
		@S_LINE_SOURCE_CD, @SUMMARY_AMT, @ZERO_DOLLAR, @ZERO_DOLLAR, @ZERO_DOLLAR, 
		@ZERO_DOLLAR, @ZERO_DOLLAR, @ZERO_DOLLAR, @ZERO_DOLLAR,
		@ZERO_DOLLAR, @ROWVERSION

	IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER



	-- Now 1M
        PRINT ' Insert balancing transactions to XX_AR_CASH_RECPT_TRN for Division 1M ...'

	SET @error_msg_placeholder1 = 'INSERT DETAILS for 1M TO'
	SET @error_msg_placeholder2 = 'XX_AR_CASH_RECPT_TRN'

	SET @ORG_ID = '1M'	 

	SELECT @ACCT_ID = PARAMETER_VALUE
	FROM dbo.XX_PROCESSING_PARAMETERS
	WHERE INTERFACE_NAME_CD = 'AR_COLLECTION'
	AND PARAMETER_NAME = '1M_CLEARING_ACCT_ID'	--new parameter 1M_CLEARING_ACCT_ID

	-- GET SUMMARY_AMT
	SELECT	@SUMMARY_AMT = isnull(SUM(-1.0 * TRN_AMT),0)
	FROM	XX_AR_CASH_RECPT_TRN
	WHERE	LEFT(ORG_ID,2)='1M'
	
	IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER
	
	-- BALANCING TRANSACTION IS SUMMARY FOR A/R Cleared
	INSERT INTO DBO.XX_AR_CASH_RECPT_TRN
	(CASH_RECPT_HDR_KEY, LN_NO, ACCT_ID, ORG_ID, ORG_ABBRV_CD,
	 PROJ_ABBRV_CD, INVC_ID, CHK_NO, TRN_DESC, DISC_TAKEN_AMT, TRN_AMT, MODIFIED_BY,
	 TIME_STAMP, TVL_ADV_ID, TVL_ADV_HDR_KEY, TVL_ADV_LN_KEY, CASH_ACCT_LINE_FL,
	 S_LINE_SOURCE_CD, PAY_TRN_AMT, PAY_DISC_TAKEN_AMT, TRN_TRN_AMT, TRN_DISC_TAKEN_AMT,
	 MU_REAL_GAIN_AMT, MU_REAL_LOSS_AMT, TRN_FINCHG_RCV_AMT, PAY_FINCHG_RCV_AMT,
	 FINCHG_RCV_AMT, ROWVERSION)
	SELECT  @CASH_RECPT_HDR_KEY, @LN_NO, @ACCT_ID, @ORG_ID, @ORG_ABBRV_CD,
		@PROJ_ABBRV_CD, @BLANK, @CHK_NO, @TRN_DESC, @DISC_TAKEN_AMT, @SUMMARY_AMT, CAST(SUSER_SNAME() as varchar(20)), -- CR-11452
		GETDATE(), @TVL_ADV_ID, @TVL_ADV_HDR_KEY, @TVL_ADV_LN_KEY, @CASH_ACCT_LINE_FL,
		@S_LINE_SOURCE_CD, @SUMMARY_AMT, @ZERO_DOLLAR, @ZERO_DOLLAR, @ZERO_DOLLAR, 
		@ZERO_DOLLAR, @ZERO_DOLLAR, @ZERO_DOLLAR, @ZERO_DOLLAR,
		@ZERO_DOLLAR, @ROWVERSION

	IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER
	
END
ELSE
BEGIN
	-- NO CASH RECPTS TO POST
	TRUNCATE TABLE XX_AR_CASH_RECPT_HDR
END
 
IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER


PRINT 'Update XX_IMAPS_INT_STATUS.AMOUNT_INPUT ...'

--15. UPDATE STATUS TABLE WITH AMOUNT INPPUT
SET @IMAPS_error_number = 204 -- Attempt to %1 %2 failed.
SET @error_msg_placeholder1 = 'UPDATE STATUS RECORD'
SET @error_msg_placeholder2 = 'AMOUNT INPUT'

UPDATE DBO.XX_IMAPS_INT_STATUS
   SET AMOUNT_INPUT = @SUMMARY_AMT,
       MODIFIED_BY = SUSER_SNAME(),
       MODIFIED_DATE = GETDATE()
WHERE STATUS_RECORD_NUM = @in_STATUS_RECORD_NUM

IF @@ERROR <> 0 GOTO BL_ERROR_HANDLER


NO_INVOICES_PASSED_VALIDATION:

RETURN(0)



BL_ERROR_HANDLER:

EXEC dbo.XX_ERROR_MSG_DETAIL
   @in_error_code           = @IMAPS_error_number,
   @in_display_requested    = 1,
   @in_SQLServer_error_code = @@ERROR,
   @in_placeholder_value1   = @error_msg_placeholder1,
   @in_placeholder_value2   = @error_msg_placeholder2,
   @in_calling_object_name  = @SP_NAME,
   @out_msg_text            = @out_STATUS_DESCRIPTION OUTPUT

RETURN(1)

END

GO

